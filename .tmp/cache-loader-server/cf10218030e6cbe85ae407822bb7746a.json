{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/order/services/closeOrder.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/order/services/closeOrder.js","mtime":1671127502529},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nexports.default = closeOrder;\n\nvar _constants = require('../../../../constants/constants');\n\nvar _editOrder = require('../queries/editOrder');\n\nvar _editOrder2 = _interopRequireDefault(_editOrder);\n\nvar _editUser = require('../../user/queries/editUser');\n\nvar _editUser2 = _interopRequireDefault(_editUser);\n\nvar _getOrderById = require('../queries/getOrderById');\n\nvar _getOrderById2 = _interopRequireDefault(_getOrderById);\n\nvar _pricesController = require('../../../../controllers/pricesController');\n\nvar _pricesController2 = _interopRequireDefault(_pricesController);\n\nvar _getAssetValues = require('../../../../../src/apps/client/utils/getAssetValues');\n\nvar _constants2 = require('../../../../../src/apps/client/constants/constants');\n\nvar _symbols = require('../../../../constants/symbols');\n\nvar _calculateBuyPrice = require('../../../../../src/apps/client/utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nvar _getUserById = require('../../user/queries/getUserById');\n\nvar _getUserById2 = _interopRequireDefault(_getUserById);\n\nvar _getOrdersByInfo = require('../queries/getOrdersByInfo');\n\nvar _getOrdersByInfo2 = _interopRequireDefault(_getOrdersByInfo);\n\nvar _model = require('../model');\n\nvar _model2 = _interopRequireDefault(_model);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction closeOrder(req, res) {\n    var _this = this;\n\n    try {\n        (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n            var id, userId, balance, closedPriceParam, info, user;\n            return _regenerator2.default.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            id = void 0;\n                            userId = void 0;\n                            balance = void 0;\n                            closedPriceParam = void 0;\n\n                            if (!req.originalUrl.match(/\\/api\\/client\\/order\\/close-all\\/(.*?)/)) {\n                                _context2.next = 19;\n                                break;\n                            }\n\n                            if (!req.params.id.includes('__')) {\n                                _context2.next = 17;\n                                break;\n                            }\n\n                            info = req.params.id.split('__');\n                            _context2.next = 9;\n                            return (0, _getUserById2.default)(info[1]);\n\n                        case 9:\n                            user = _context2.sent;\n\n                            if (user) {\n                                _context2.next = 12;\n                                break;\n                            }\n\n                            return _context2.abrupt('return', res.status(_constants.NOT_FOUND_STATUS_CODE).end());\n\n                        case 12:\n\n                            res.locals.user = user;\n\n                            id = info[0];\n                            userId = res.locals.user.id;\n                            balance = res.locals.user.balance;\n                            info[2] ? closedPriceParam = +info[2] : '';\n\n                        case 17:\n                            _context2.next = 22;\n                            break;\n\n                        case 19:\n                            id = req.params.id;\n                            userId = res.locals.user.id;\n                            balance = res.locals.user.balance;\n\n                        case 22:\n\n                            (0, _getOrderById2.default)(id).then(function (order) {\n                                if (!order || order.userId !== userId) {\n                                    return res.status(_constants.BAD_REQUEST_STATUS_CODE).send();\n                                }\n                                var closedPrice = _pricesController2.default.prices[order.assetName];\n                                var closedPriceReal = order.type === 'sell' ? closedPrice : (0, _calculateBuyPrice2.default)(order.assetName, closedPrice);\n\n                                var closedOrder = {\n                                    id: id,\n                                    isClosed: true,\n                                    closedAt: Date.now(),\n                                    closedPrice: closedPriceParam || closedPriceReal\n                                };\n\n                                var asset = _symbols.CHART_SYMBOL_INFO_MAP[order.assetName];\n                                var profit = (0, _getAssetValues.getProfit)(order.amount, order.openingPrice, closedPriceReal, order.type, asset);\n                                var commission = (0, _getAssetValues.getCommission)(order.pledge, _constants2.COMMISSION);\n                                var updatedUser = {\n                                    id: userId,\n                                    balance: balance + profit - commission,\n                                    mainBalance: balance + profit - commission\n                                };\n\n                                Promise.all([(0, _editUser2.default)(updatedUser), (0, _editOrder2.default)(closedOrder)]).then(function () {\n                                    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref3) {\n                                        var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),\n                                            user = _ref4[0],\n                                            order = _ref4[1];\n\n                                        var openOrders, countClosedOrders;\n                                        return _regenerator2.default.wrap(function _callee$(_context) {\n                                            while (1) {\n                                                switch (_context.prev = _context.next) {\n                                                    case 0:\n                                                        _context.next = 2;\n                                                        return (0, _getOrdersByInfo2.default)({ userId: userId, isClosed: false });\n\n                                                    case 2:\n                                                        openOrders = _context.sent;\n                                                        _context.next = 5;\n                                                        return _model2.default.countDocuments({ userId: userId, isClosed: true });\n\n                                                    case 5:\n                                                        countClosedOrders = _context.sent;\n                                                        return _context.abrupt('return', res.status(_constants.OKEY_STATUS_CODE).send({ openOrders: openOrders, closedOrders: [order], countClosedOrders: countClosedOrders, user: user }));\n\n                                                    case 7:\n                                                    case 'end':\n                                                        return _context.stop();\n                                                }\n                                            }\n                                        }, _callee, _this);\n                                    }));\n\n                                    return function (_x) {\n                                        return _ref2.apply(this, arguments);\n                                    };\n                                }()).catch(function () {\n                                    res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                                });\n                            });\n\n                        case 23:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, _this);\n        }))();\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\ncloseOrder.i = 'closeOrder';\ncloseOrder.i = 'closeOrder';",null]}