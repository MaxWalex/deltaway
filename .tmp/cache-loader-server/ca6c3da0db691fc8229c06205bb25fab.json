{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\authentication\\services\\recover.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\authentication\\services\\recover.js","mtime":1671546368000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = recover;\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _getAdminByEmail = require('../queries/getAdminByEmail');\n\nvar _getAdminByEmail2 = _interopRequireDefault(_getAdminByEmail);\n\nvar _sendEmail = require('../../../../helpers/sendEmail');\n\nvar _sendEmail2 = _interopRequireDefault(_sendEmail);\n\nvar _constants2 = require('../../../../../src/apps/admin/constants/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar privateKey = _fs2.default.readFileSync(_path2.default.resolve('./server/privateKeys/adminPrivateKey.ppk'), 'utf8');\n\nfunction recover(req, res) {\n    try {\n        var email = req.query.email;\n\n        (0, _getAdminByEmail2.default)(email).then(function (admin) {\n            if (!admin) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n            }\n\n            _jsonwebtoken2.default.sign(admin.toJSON(), privateKey, {\n                algorithm: 'RS256',\n                expiresIn: '24h'\n            }, function (err, token) {\n                if (err || !token) {\n                    return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                }\n\n                var subject = 'Восстановление учетной записи';\n                var host = req.get('host');\n                var recoveryUrl = req.protocol + '://' + host + _constants2.RECOVERY_URL + '?recovery-token=' + token + '&&email=' + admin.email;\n                var successCallback = function successCallback() {\n                    return res.sendStatus(_constants.OKEY_STATUS_CODE);\n                };\n                var failureCallback = function failureCallback() {\n                    return res.sendStatus(_constants.SERVER_ERROR_STATUS_CODE);\n                };\n\n                (0, _sendEmail2.default)(admin.email, {\n                    subject: subject,\n                    content: '<a href=' + recoveryUrl + ' target=\"_blank\">\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0440\\u043C\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F</a>'\n                }, {\n                    success: successCallback,\n                    failure: failureCallback\n                });\n            });\n        }).catch(function () {\n            res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\nrecover.i = 'recover';\nrecover.i = 'recover';",null]}