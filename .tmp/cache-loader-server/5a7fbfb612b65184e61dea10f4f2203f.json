{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\db\\services\\upload.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\db\\services\\upload.js","mtime":1671546372000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = upload;\n\nvar _constants = require('../../../../constants/constants');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _rimraf = require('rimraf');\n\nvar _rimraf2 = _interopRequireDefault(_rimraf);\n\nvar _mongodbRestore = require('mongodb-restore');\n\nvar _mongodbRestore2 = _interopRequireDefault(_mongodbRestore);\n\nvar _multipart = require('../../../../helpers/multipart');\n\nvar _multipart2 = _interopRequireDefault(_multipart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uploader = (0, _multipart2.default)();\n\nvar FILES_FOLDER = _path2.default.join(__dirname, '../src/apps/admin/files');\n\nfunction upload(req, res) {\n    try {\n        uploader(req, res, function (err) {\n            if (err || !req.files[0]) {\n                return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n            }\n\n            var file = req.files[0];\n            var tarPath = FILES_FOLDER + '/' + file.filename;\n\n            (0, _mongodbRestore2.default)({\n                uri: _constants.DATABASE_URL,\n                root: FILES_FOLDER,\n                parser: 'json',\n                tar: file.filename,\n                drop: true,\n                callback: function callback(err) {\n                    if (err) {\n                        return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                    }\n\n                    _rimraf2.default.sync(tarPath);\n\n                    return res.status(_constants.OKEY_STATUS_CODE).end();\n                }\n            });\n\n            res.status(_constants.OKEY_STATUS_CODE).send('/' + file.path.replace(/\\\\/g, '/'));\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\nupload.i = 'upload';\nupload.i = 'upload';",null]}