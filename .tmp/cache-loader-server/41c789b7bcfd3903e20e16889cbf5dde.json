{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/authentication/services/checkAuthentication.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/authentication/services/checkAuthentication.js","mtime":1671127526005},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nexports.default = checkAuthentication;\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _getUserById = require('../../user/queries/getUserById');\n\nvar _getUserById2 = _interopRequireDefault(_getUserById);\n\nvar _getTransactionsByUserId = require('../../transaction/queries/getTransactionsByUserId');\n\nvar _getTransactionsByUserId2 = _interopRequireDefault(_getTransactionsByUserId);\n\nvar _getPayments = require('../../../admin/payment/queries/getPayments');\n\nvar _getPayments2 = _interopRequireDefault(_getPayments);\n\nvar _getOrdersByInfo = require('../../order/queries/getOrdersByInfo');\n\nvar _getOrdersByInfo2 = _interopRequireDefault(_getOrdersByInfo);\n\nvar _model = require('../../order/model');\n\nvar _model2 = _interopRequireDefault(_model);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar publicKey = _fs2.default.readFileSync(_path2.default.resolve('./server/privateKeys/adminPublicKey.ppk'), 'utf8');\n\nfunction checkAuthentication(req, res) {\n    try {\n        var token = req.query.token;\n\n        if (!token) {\n            return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n        }\n\n        _jsonwebtoken2.default.verify(token, publicKey, {\n            algorithm: 'RS256'\n        }, function (err, _ref) {\n            var userId = _ref.id;\n\n            if (err) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n            }\n\n            (0, _getUserById2.default)(userId).then(function (user) {\n                if (!user || user.blocked) {\n                    return res.status(_constants.NOT_FOUND_STATUS_CODE).end();\n                }\n\n                return Promise.all([(0, _getOrdersByInfo2.default)({ userId: userId, isClosed: false }), (0, _getOrdersByInfo2.default)({ userId: userId, page: 1, perPage: 10, isClosed: true }), _model2.default.countDocuments({ userId: userId, isClosed: true }), (0, _getTransactionsByUserId2.default)(userId), (0, _getPayments2.default)()]).then(function (_ref2) {\n                    var _ref3 = (0, _slicedToArray3.default)(_ref2, 5),\n                        openOrders = _ref3[0],\n                        closedOrders = _ref3[1],\n                        countClosedOrders = _ref3[2],\n                        transactions = _ref3[3],\n                        payments = _ref3[4];\n\n                    var payment = payments[0];\n                    // const openOrders = orders.filter(order => !order.isClosed);\n                    // const closedOrders = orders.filter(order => order.isClosed);\n\n                    return res.status(_constants.OKEY_STATUS_CODE).send({\n                        user: user,\n                        openOrders: openOrders,\n                        closedOrders: closedOrders,\n                        transactions: transactions,\n                        payment: payment,\n                        countClosedOrders: countClosedOrders\n                    });\n                });\n            }).catch(function () {\n                res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n            });\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\ncheckAuthentication.i = 'checkAuthentication';\ncheckAuthentication.i = 'checkAuthentication';",null]}