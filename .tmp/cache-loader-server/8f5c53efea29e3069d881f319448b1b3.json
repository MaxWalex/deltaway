{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/user/services/saveUser.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/user/services/saveUser.js","mtime":1671127518473},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = saveUser;\n\nvar _getUserByEmail = require('../../user/queries/getUserByEmail');\n\nvar _getUserByEmail2 = _interopRequireDefault(_getUserByEmail);\n\nvar _getUsersCount = require('../../user/queries/getUsersCount');\n\nvar _getUsersCount2 = _interopRequireDefault(_getUsersCount);\n\nvar _uniqid = require('uniqid');\n\nvar _uniqid2 = _interopRequireDefault(_uniqid);\n\nvar _md = require('md5');\n\nvar _md2 = _interopRequireDefault(_md);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _each = require('@tinkoff/utils/object/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _saveUser = require('../queries/saveUser');\n\nvar _saveUser2 = _interopRequireDefault(_saveUser);\n\nvar _sendEmail = require('../../../../helpers/sendEmail');\n\nvar _sendEmail2 = _interopRequireDefault(_sendEmail);\n\nvar _templateEmail = require('./templateEmail/templateEmail');\n\nvar _templateEmail2 = _interopRequireDefault(_templateEmail);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _registrationFieldsAndValidation = require('../utils/registrationFieldsAndValidation');\n\nvar _getStatus = require('../../../../helpers/getStatus');\n\nvar _getStatus2 = _interopRequireDefault(_getStatus);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar privateKey = _fs2.default.readFileSync(_path2.default.resolve('./server/privateKeys/adminPrivateKey.ppk'), 'utf8');\n\nvar INITIAL_USER_NUMBER = 144655;\nvar INITIAL_BALANCE = 0;\n\nvar validate = function validate(fields, fieldsValidatorsMap) {\n    var isValid = true;\n\n    (0, _each2.default)(function (value, key) {\n        var validators = fieldsValidatorsMap[key];\n\n        validators && validators.forEach(function (validator) {\n            if (!validator(value)) {\n                isValid = false;\n            }\n        });\n    }, fields);\n\n    return isValid;\n};\n\nfunction saveUser(req, res) {\n    try {\n        var _req$body = req.body,\n            name = _req$body.name,\n            surname = _req$body.surname,\n            email = _req$body.email,\n            password = _req$body.password,\n            phone = _req$body.phone,\n            date = _req$body.date,\n            country = _req$body.country;\n\n        var userId = (0, _uniqid2.default)();\n\n        (0, _getUsersCount2.default)().then(function (count) {\n            return (0, _getUserByEmail2.default)(email).then(function (user) {\n                if (user) {\n                    return res.status(_constants.FORBIDDEN_STATUS_CODE).send({ message: 'Пользователь уже существует' });\n                }\n\n                var userObj = {\n                    name: name,\n                    surname: surname,\n                    email: email,\n                    phone: phone,\n                    date: date,\n                    id: userId,\n                    password: (0, _md2.default)(password),\n                    country: country,\n                    accountNumber: INITIAL_USER_NUMBER + count,\n                    createdAt: Date.now(),\n                    balance: INITIAL_BALANCE,\n                    mainBalance: INITIAL_BALANCE,\n                    bonuses: 0,\n                    credFacilities: 0,\n                    accountStatus: (0, _getStatus2.default)(INITIAL_BALANCE),\n                    blocked: false,\n                    isActive: 'null',\n                    isVipStatus: false\n                };\n                var isUserValid = validate(userObj, _registrationFieldsAndValidation.userFieldsValidatorsMap);\n                if (!isUserValid) {\n                    return res.status(_constants.BAD_REQUEST_STATUS_CODE).send({ error: 'Значения не являются допустимыми' });\n                }\n\n                return (0, _saveUser2.default)(userObj).then(function () {\n                    res.status(_constants.OKEY_STATUS_CODE).send(userId);\n\n                    _jsonwebtoken2.default.sign({ id: userId }, privateKey, {\n                        algorithm: 'RS256',\n                        expiresIn: '99999y'\n                    }, function (err, token) {\n                        if (err || !token) {\n                            return;\n                        }\n                        (0, _sendEmail2.default)(email, {\n                            subject: 'Спасибо за регистрацию на платформе APEX TRADE',\n                            content: (0, _templateEmail2.default)(name, surname, { header: 'Спасибо за регистрацию', body: 'Спасибо за регистрацию на платформе APEX TRADE' }, token)\n                        });\n                    });\n                }).catch(function () {\n                    res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                });\n            });\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\nsaveUser.i = 'saveUser';\nsaveUser.i = 'saveUser';",null]}