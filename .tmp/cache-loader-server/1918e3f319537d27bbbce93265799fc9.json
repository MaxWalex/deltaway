{"remainingRequest":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/dimasabitov/Downloads/deltaway.20/server/helpers/backup/backups.js","dependencies":[{"path":"/Users/dimasabitov/Downloads/deltaway.20/server/helpers/backup/backups.js","mtime":1671546430012},{"path":"/Users/dimasabitov/Downloads/deltaway.20/.babelrc","mtime":1671546158632},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/cache-loader/dist/cjs.js","mtime":1671546959174},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js","mtime":1671546957682}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nexports.default = backups;\n\nvar _mongodbBackup = require('mongodb-backup');\n\nvar _mongodbBackup2 = _interopRequireDefault(_mongodbBackup);\n\nvar _nodeSchedule = require('node-schedule');\n\nvar _nodeSchedule2 = _interopRequireDefault(_nodeSchedule);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _format = require('date-fns/format');\n\nvar _format2 = _interopRequireDefault(_format);\n\nvar _rimraf = require('rimraf');\n\nvar _rimraf2 = _interopRequireDefault(_rimraf);\n\nvar _constants = require('../../constants/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BACKUPS_FOLDER = _path2.default.join(__dirname, '..', 'backups');\nvar FILE_NAME_REGEX = /dump-/;\n\nvar lastDumpName = null;\nvar preLastDumpName = null;\n\nfunction backups() {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    if (!_fs2.default.existsSync(BACKUPS_FOLDER)) {\n        _fs2.default.mkdirSync(BACKUPS_FOLDER);\n    }\n\n    _fs2.default.readdirSync(BACKUPS_FOLDER).map(function (fileName) {\n        if (!FILE_NAME_REGEX.test(fileName)) {\n            return null;\n        }\n\n        var fileDateSrc = fileName.slice(5).slice(0, -4);\n\n        var _fileDateSrc$split = fileDateSrc.split('-'),\n            _fileDateSrc$split2 = (0, _slicedToArray3.default)(_fileDateSrc$split, 3),\n            year = _fileDateSrc$split2[0],\n            month = _fileDateSrc$split2[1],\n            day = _fileDateSrc$split2[2];\n\n        return {\n            name: fileName,\n            date: +new Date(+year, +month, +day)\n        };\n    }).filter(function (file) {\n        return !!file;\n    }).sort(function (prevItem, nextItem) {\n        return nextItem.date - prevItem.date;\n    }).forEach(function (file, i) {\n        if (i === 0) {\n            lastDumpName = file.name;\n        } else if (i === 1) {\n            preLastDumpName = file.name;\n        } else {\n            _rimraf2.default.sync(_path2.default.join(BACKUPS_FOLDER, file.name));\n        }\n    });\n\n    _nodeSchedule2.default.scheduleJob({ hour: 1 }, function (time) {\n        var dumpName = 'dump-' + (0, _format2.default)(time, 'yyyy-MM-dd') + '.tar';\n\n        if (preLastDumpName) {\n            _rimraf2.default.sync(_path2.default.join(BACKUPS_FOLDER, preLastDumpName));\n        }\n\n        if (lastDumpName) {\n            preLastDumpName = lastDumpName;\n        }\n\n        lastDumpName = dumpName;\n\n        (0, _mongodbBackup2.default)({\n            uri: _constants.DATABASE_URL,\n            root: BACKUPS_FOLDER,\n            parser: 'json',\n            tar: dumpName\n        });\n    });\n}",null]}