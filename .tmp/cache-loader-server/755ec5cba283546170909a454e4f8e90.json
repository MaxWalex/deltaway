{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/admin/authentication/services/checkRecoveryToken.js","dependencies":[{"path":"/home/vps/ppf/server/api/admin/authentication/services/checkRecoveryToken.js","mtime":1671127495313},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = checkRecoveryToken;\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _getAdminByEmail = require('../queries/getAdminByEmail');\n\nvar _getAdminByEmail2 = _interopRequireDefault(_getAdminByEmail);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar publicKey = _fs2.default.readFileSync(_path2.default.resolve('./server/privateKeys/adminPublicKey.ppk'), 'utf8');\n\nfunction checkRecoveryToken(req, res) {\n    try {\n        var _req$query = req.query,\n            token = _req$query.token,\n            email = _req$query.email;\n\n\n        if (!token || !email) {\n            return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n        }\n\n        (0, _getAdminByEmail2.default)(email).then(function (admin) {\n            if (!admin) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n            }\n\n            _jsonwebtoken2.default.verify(token, publicKey, {\n                algorithm: 'RS256'\n            }, function (err) {\n                if (err) {\n                    return res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n                }\n\n                res.status(_constants.OKEY_STATUS_CODE).end();\n            });\n        }).catch(function () {\n            res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\ncheckRecoveryToken.i = 'checkRecoveryToken';\ncheckRecoveryToken.i = 'checkRecoveryToken';",null]}