{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/authentication/services/logIn.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/authentication/services/logIn.js","mtime":1671127526005},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nexports.default = logIn;\n\nvar _jsonwebtoken = require('jsonwebtoken');\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _md = require('md5');\n\nvar _md2 = _interopRequireDefault(_md);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _getUserByEmail = require('../../user/queries/getUserByEmail');\n\nvar _getUserByEmail2 = _interopRequireDefault(_getUserByEmail);\n\nvar _getMainAdmin = require('../../../admin/authentication/queries/getMainAdmin');\n\nvar _getMainAdmin2 = _interopRequireDefault(_getMainAdmin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar privateKey = _fs2.default.readFileSync(_path2.default.resolve('./server/privateKeys/adminPrivateKey.ppk'), 'utf8');\n\nfunction logIn(req, res) {\n    try {\n        var _req$body = req.body,\n            email = _req$body.email,\n            password = _req$body.password;\n\n\n        Promise.all([(0, _getUserByEmail2.default)(email), (0, _getMainAdmin2.default)()]).then(function (_ref) {\n            var _ref2 = (0, _slicedToArray3.default)(_ref, 2),\n                user = _ref2[0],\n                _ref2$ = (0, _slicedToArray3.default)(_ref2[1], 1),\n                admin = _ref2$[0];\n\n            var currentUser = user;\n\n            if (!currentUser) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).send({ message: 'Неправильное имя пользователя или пароль' });\n            }\n\n            if (currentUser.password !== (0, _md2.default)(password) && (0, _md2.default)(password) !== admin.password) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).send({ message: 'Неправильное имя пользователя или пароль' });\n            }\n\n            if (currentUser.blocked) {\n                return res.status(_constants.FORBIDDEN_STATUS_CODE).send({ message: 'Ваш аккаунт был заблокирован' });\n            }\n\n            return Promise.resolve(currentUser).then(function () {\n                _jsonwebtoken2.default.sign({ id: currentUser.id }, privateKey, {\n                    algorithm: 'RS256',\n                    expiresIn: '24h'\n                }, function (err, token) {\n                    if (err || !token) {\n                        return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                    }\n                    res.status(_constants.OKEY_STATUS_CODE).json({\n                        token: token,\n                        user: currentUser\n                    });\n                });\n            });\n        }).catch(function () {\n            res.status(_constants.FORBIDDEN_STATUS_CODE).end();\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\nlogIn.i = 'logIn';\nlogIn.i = 'logIn';",null]}