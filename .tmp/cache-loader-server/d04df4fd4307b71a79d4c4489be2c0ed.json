{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\transaction\\services\\editTransaction.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\transaction\\services\\editTransaction.js","mtime":1671546368000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = editTransaction;\n\nvar _constants = require('../../../../constants/constants');\n\nvar _prepareTransaction = require('../utils/prepareTransaction');\n\nvar _prepareTransaction2 = _interopRequireDefault(_prepareTransaction);\n\nvar _editTransaction = require('../../../client/transaction/queries/editTransaction');\n\nvar _editTransaction2 = _interopRequireDefault(_editTransaction);\n\nvar _getTransactionById = require('../../../client/transaction/queries/getTransactionById');\n\nvar _getTransactionById2 = _interopRequireDefault(_getTransactionById);\n\nvar _editUser = require('../../../client/user/queries/editUser');\n\nvar _editUser2 = _interopRequireDefault(_editUser);\n\nvar _checkBalance = require('../utils/checkBalance');\n\nvar _checkBalance2 = _interopRequireDefault(_checkBalance);\n\nvar _getStatus = require('../../../../helpers/getStatus');\n\nvar _getStatus2 = _interopRequireDefault(_getStatus);\n\nvar _getAllUsers = require('../../../client/user/queries/getAllUsers');\n\nvar _getAllUsers2 = _interopRequireDefault(_getAllUsers);\n\nvar _getAllTransactions = require('../../../client/transaction/queries/getAllTransactions');\n\nvar _getAllTransactions2 = _interopRequireDefault(_getAllTransactions);\n\nvar _getUserById = require('../../../client/user/queries/getUserById');\n\nvar _getUserById2 = _interopRequireDefault(_getUserById);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction editTransaction(req, res) {\n    var updatedTransaction = (0, _prepareTransaction2.default)(req.body.transaction);\n    var user = req.body.user;\n\n\n    (0, _getTransactionById2.default)(updatedTransaction.id).then(function (transaction) {\n        (0, _getUserById2.default)(user.id).then(function (user) {\n            var diff = +updatedTransaction.value - transaction[0].value;\n            var balance = user.balance + diff;\n            var mainBalance = user.mainBalance + diff;\n            var bonuses = user.bonuses + diff;\n            var credFacilities = user.credFacilities + diff;\n            var info = { id: user.id };\n\n            if (updatedTransaction.type === 'deposit') {\n                info.balance = (0, _checkBalance2.default)(balance);\n                info.mainBalance = (0, _checkBalance2.default)(mainBalance);\n            }\n            if (updatedTransaction.type === 'bonuses') {\n                info.bonuses = (0, _checkBalance2.default)(bonuses);\n            }\n            if (updatedTransaction.type === 'credFacilities') {\n                info.credFacilities = (0, _checkBalance2.default)(credFacilities);\n            }\n\n            info.accountStatus = (0, _getStatus2.default)(info.balance, user.isVipStatus);\n\n            (0, _editTransaction2.default)(updatedTransaction).then(function () {\n                (0, _editUser2.default)(info).then(function () {\n                    (0, _getAllUsers2.default)().then(function (users) {\n                        (0, _getAllTransactions2.default)().then(function (transactions) {\n                            res.status(_constants.OKEY_STATUS_CODE).send({ transactions: transactions, users: users });\n                        }).catch(function () {\n                            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                        });\n                    }).catch(function () {\n                        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                    });\n                }).catch(function () {\n                    res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                });\n            }).catch(function () {\n                res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n            });\n        }).catch(function () {\n            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n        });\n    }).catch(function () {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    });\n}\neditTransaction.i = 'editTransaction';\neditTransaction.i = 'editTransaction';",null]}