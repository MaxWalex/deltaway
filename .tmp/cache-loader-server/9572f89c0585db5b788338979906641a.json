{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/order/services/saveOrder.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/order/services/saveOrder.js","mtime":1671127502477},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nexports.default = saveOrder;\n\nvar _uniqid = require('uniqid');\n\nvar _uniqid2 = _interopRequireDefault(_uniqid);\n\nvar _each = require('@tinkoff/utils/object/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _saveOrder = require('../queries/saveOrder');\n\nvar _saveOrder2 = _interopRequireDefault(_saveOrder);\n\nvar _editUser = require('../../user/queries/editUser');\n\nvar _editUser2 = _interopRequireDefault(_editUser);\n\nvar _numeral = require('numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _symbols = require('../../../../constants/symbols');\n\nvar _fieldsAndValidation = require('../utils/fieldsAndValidation');\n\nvar _getAssetValues = require('../../../../../src/apps/client/utils/getAssetValues');\n\nvar _pricesController = require('../../../../controllers/pricesController');\n\nvar _pricesController2 = _interopRequireDefault(_pricesController);\n\nvar _calculateBuyPrice = require('../../../../../src/apps/client/utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nvar _getOrdersByInfo = require('../queries/getOrdersByInfo');\n\nvar _getOrdersByInfo2 = _interopRequireDefault(_getOrdersByInfo);\n\nvar _model = require('../model');\n\nvar _model2 = _interopRequireDefault(_model);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validate = function validate(fields, fieldsValidatorsMap) {\n    var isValid = true;\n\n    (0, _each2.default)(function (value, key) {\n        var validators = fieldsValidatorsMap[key];\n\n        validators && validators.forEach(function (validator) {\n            if (!validator(value)) {\n                isValid = false;\n            }\n        });\n    }, fields);\n\n    return isValid;\n};\n\nfunction saveOrder(req, res) {\n    var _this = this;\n\n    try {\n        var _req$body = req.body,\n            assetName = _req$body.assetName,\n            amount = _req$body.amount,\n            type = _req$body.type,\n            takeProfit = _req$body.takeProfit,\n            stopLoss = _req$body.stopLoss,\n            autoClose = _req$body.autoClose;\n\n        var openingPrice = _pricesController2.default.prices[assetName];\n        var openingPriceReal = type === 'sell' ? openingPrice : (0, _calculateBuyPrice2.default)(assetName, openingPrice);\n        var asset = _symbols.CHART_SYMBOL_INFO_MAP[assetName];\n\n        if (!asset) {\n            return res.status(_constants.BAD_REQUEST_STATUS_CODE).end();\n        }\n\n        var _res$locals$user = res.locals.user,\n            userId = _res$locals$user.id,\n            balance = _res$locals$user.balance;\n\n        var openingSlotPrice = (0, _getAssetValues.getOpeningSlotPrice)(asset, openingPriceReal);\n        var pledge = +(0, _numeral2.default)((0, _getAssetValues.getPledge)(amount, openingSlotPrice)).format('0.00');\n        var orderObj = {\n            assetName: assetName,\n            amount: amount,\n            openingPrice: openingPriceReal,\n            pledge: pledge,\n            userId: userId,\n            type: type,\n            id: (0, _uniqid2.default)(),\n            isClosed: false,\n            createdAt: Date.now(),\n            takeProfit: takeProfit || 0,\n            stopLoss: stopLoss || 0,\n            autoClose: autoClose\n        };\n\n        var isOrderValid = validate(orderObj, _fieldsAndValidation.orderFieldsValidatorsMap);\n\n        if (!isOrderValid) {\n            return res.status(_constants.BAD_REQUEST_STATUS_CODE).send({ error: 'Значения не являются допустимыми' });\n        }\n\n        return (0, _saveOrder2.default)(orderObj).then((0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n            var openOrders, countClosedOrders;\n            return _regenerator2.default.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            (0, _editUser2.default)({ id: userId, mainBalance: balance });\n\n                            _context.next = 3;\n                            return (0, _getOrdersByInfo2.default)({ userId: userId, isClosed: false });\n\n                        case 3:\n                            openOrders = _context.sent;\n                            _context.next = 6;\n                            return _model2.default.countDocuments({ userId: userId, isClosed: true });\n\n                        case 6:\n                            countClosedOrders = _context.sent;\n                            return _context.abrupt('return', res.status(_constants.OKEY_STATUS_CODE).send({ openOrders: openOrders, /* closedOrders, */countClosedOrders: countClosedOrders }));\n\n                        case 8:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this);\n        }))).catch(function () {\n            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\nsaveOrder.i = 'saveOrder';\nsaveOrder.i = 'saveOrder';",null]}