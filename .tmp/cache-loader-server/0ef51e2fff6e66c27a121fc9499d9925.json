{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/user/services/editUser.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/user/services/editUser.js","mtime":1671127518829},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = editUser;\n\nvar _md = require('md5');\n\nvar _md2 = _interopRequireDefault(_md);\n\nvar _each = require('@tinkoff/utils/object/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _editUser = require('../queries/editUser');\n\nvar _editUser2 = _interopRequireDefault(_editUser);\n\nvar _constants = require('../../../../constants/constants');\n\nvar _fieldsAndValidation = require('../utils/fieldsAndValidation');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validate = function validate(fields, fieldsValidatorsMap) {\n    var isValid = true;\n\n    (0, _each2.default)(function (value, key) {\n        var validators = fieldsValidatorsMap[key];\n\n        validators && validators.forEach(function (validator) {\n            if (!validator(value)) {\n                isValid = false;\n            }\n        });\n    }, fields);\n\n    return isValid;\n};\n\nfunction editUser(req, res) {\n    try {\n        var _req$body = req.body,\n            name = _req$body.name,\n            surname = _req$body.surname,\n            email = _req$body.email,\n            password = _req$body.password,\n            phone = _req$body.phone,\n            date = _req$body.date,\n            city = _req$body.city,\n            address = _req$body.address,\n            gender = _req$body.gender,\n            country = _req$body.country,\n            accountNumber = _req$body.accountNumber;\n        var id = res.locals.user.id;\n\n        var personInfo = {\n            name: name,\n            surname: surname,\n            email: email,\n            phone: phone,\n            date: date,\n            city: city,\n            address: address,\n            gender: gender,\n            country: country,\n            accountNumber: accountNumber,\n            id: id,\n            updatedAt: Date.now()\n        };\n        var isUserValid = validate(personInfo, _fieldsAndValidation.userFieldsValidatorsMap);\n\n        if (!isUserValid) {\n            return res.status(_constants.BAD_REQUEST_STATUS_CODE).send({ error: 'Значения не являются допустимыми' });\n        }\n\n        if (password) {\n            personInfo.password = (0, _md2.default)(password);\n        }\n\n        (0, _editUser2.default)(personInfo).then(function (user) {\n            res.status(_constants.OKEY_STATUS_CODE).send(user);\n        }).catch(function () {\n            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n        });\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\neditUser.i = 'editUser';\neditUser.i = 'editUser';",null]}