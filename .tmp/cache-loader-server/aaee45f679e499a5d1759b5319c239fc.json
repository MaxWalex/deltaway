{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/api/client/order/services/getOrders.js","dependencies":[{"path":"/home/vps/ppf/server/api/client/order/services/getOrders.js","mtime":1671127502965},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nexports.default = getOrders;\n\nvar _getOrdersByInfo = require('../queries/getOrdersByInfo');\n\nvar _getOrdersByInfo2 = _interopRequireDefault(_getOrdersByInfo);\n\nvar _model = require('../model');\n\nvar _model2 = _interopRequireDefault(_model);\n\nvar _constants = require('../../../../constants/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOrders(req, res) {\n    var _this = this;\n\n    try {\n        (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n            var id, _req$query, page, perPage, openOrders, closedOrders, countClosedOrders;\n\n            return _regenerator2.default.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            id = res.locals.user.id;\n                            _req$query = req.query, page = _req$query.page, perPage = _req$query.perPage;\n                            _context.next = 4;\n                            return (0, _getOrdersByInfo2.default)({ userId: id, isClosed: false });\n\n                        case 4:\n                            openOrders = _context.sent;\n                            _context.next = 7;\n                            return (0, _getOrdersByInfo2.default)({ userId: id, page: page, perPage: perPage, isClosed: true });\n\n                        case 7:\n                            closedOrders = _context.sent;\n                            _context.next = 10;\n                            return _model2.default.countDocuments({ userId: id, isClosed: true });\n\n                        case 10:\n                            countClosedOrders = _context.sent;\n\n\n                            res.status(_constants.OKEY_STATUS_CODE).send({ openOrders: openOrders, closedOrders: closedOrders, countClosedOrders: countClosedOrders });\n\n                        case 12:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this);\n        }))();\n    } catch (e) {\n        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\ngetOrders.i = 'getOrders';\ngetOrders.i = 'getOrders';",null]}