{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/controllers/messagesWebsocketController.js","dependencies":[{"path":"/home/vps/ppf/server/controllers/messagesWebsocketController.js","mtime":1671127398452},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _socket = require('socket.io');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _worker_threads = require('worker_threads');\n\nvar _string = require('@tinkoff/utils/is/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _uniqid = require('uniqid');\n\nvar _uniqid2 = _interopRequireDefault(_uniqid);\n\nvar _saveMessage = require('../api/client/message/queries/saveMessage');\n\nvar _saveMessage2 = _interopRequireDefault(_saveMessage);\n\nvar _verifyTokenAdmin = require('../helpers/verifyTokenAdmin');\n\nvar _verifyTokenAdmin2 = _interopRequireDefault(_verifyTokenAdmin);\n\nvar _verifyTokenClient = require('../helpers/verifyTokenClient');\n\nvar _verifyTokenClient2 = _interopRequireDefault(_verifyTokenClient);\n\nvar _https = require('https');\n\nvar _https2 = _interopRequireDefault(_https);\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _pricesController = require('./pricesController');\n\nvar _constants = require('../constants/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar credentials = {\n    key: _fs2.default.readFileSync('server/https/private-new.key'),\n    cert: _fs2.default.readFileSync('server/https/certificate.crt'),\n    ca: []\n};\n\nvar verifyTokenFuncMap = {\n    admin: _verifyTokenAdmin2.default,\n    client: _verifyTokenClient2.default\n};\n\nvar connections = {};\n\nvar MessagesWebsocketController = function () {\n    function MessagesWebsocketController() {\n        (0, _classCallCheck3.default)(this, MessagesWebsocketController);\n\n        if (_worker_threads.isMainThread) {\n            var app = (0, _express2.default)();\n            var server = process.env.NODE_ENV === 'production' ? _https2.default.createServer(credentials, app) : _http2.default.createServer(app);\n\n            server.listen(5050, function () {});\n\n            this.io = (0, _socket2.default)(server);\n        }\n    }\n\n    (0, _createClass3.default)(MessagesWebsocketController, [{\n        key: 'start',\n        value: function start() {\n            this.io.on('connection', function (client) {\n                client.on('token', function (data) {\n                    try {\n                        verifyTokenFuncMap[data.type](data.token).then(function (user) {\n                            var clientId = data.type === 'admin' ? 'admin' : user.id;\n\n                            if (!clientId) {\n                                return;\n                            }\n\n                            if (!connections[clientId]) {\n                                connections[clientId] = new Map();\n                            }\n\n                            connections[clientId].set(client, 1);\n\n                            client.on('disconnect', function () {\n                                connections[clientId].delete(client);\n                            });\n\n                            client.on('message', function (_ref) {\n                                var receiverId = _ref.receiverId,\n                                    text = _ref.text;\n\n                                if (!text || !(0, _string2.default)(text)) {\n                                    return;\n                                }\n\n                                var resultReceiverId = data.type === 'admin' ? receiverId : 'admin';\n                                var now = Date.now();\n                                var message = {\n                                    id: (0, _uniqid2.default)(),\n                                    receiverId: resultReceiverId,\n                                    senderId: clientId,\n                                    createdAt: now,\n                                    text: text,\n                                    visited: false\n                                };\n\n                                (0, _saveMessage2.default)(message).then(function () {\n                                    client.emit('message', message);\n\n                                    if (connections[resultReceiverId]) {\n                                        var _iteratorNormalCompletion = true;\n                                        var _didIteratorError = false;\n                                        var _iteratorError = undefined;\n\n                                        try {\n                                            for (var _iterator = connections[resultReceiverId].entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                                                var _step$value = (0, _slicedToArray3.default)(_step.value, 1),\n                                                    targetClient = _step$value[0];\n\n                                                targetClient.emit('message', message);\n                                            }\n                                        } catch (err) {\n                                            _didIteratorError = true;\n                                            _iteratorError = err;\n                                        } finally {\n                                            try {\n                                                if (!_iteratorNormalCompletion && _iterator.return) {\n                                                    _iterator.return();\n                                                }\n                                            } finally {\n                                                if (_didIteratorError) {\n                                                    throw _iteratorError;\n                                                }\n                                            }\n                                        }\n                                    }\n                                });\n                            });\n\n                            _pricesController.pricesEvents.on(_constants.AUTO_CLOSE_ORDER_EVENT, function (data) {\n                                // console.log('outputs websocket AUTO_CLOSE_ORDER_EVENT', data.user.id, clientId);\n                                if (data.user.id === clientId) {\n                                    client.emit(_constants.AUTO_CLOSE_ORDER_EVENT, data);\n                                }\n                            });\n                        }).catch(function (e) {\n                            console.log(e);\n                            console.log(777);\n                        });\n                    } catch (e) {\n                        console.log(e);\n                    }\n                });\n            });\n        }\n    }]);\n    return MessagesWebsocketController;\n}();\n\nvar messagesWebsocketController = new MessagesWebsocketController();\n\nexports.default = messagesWebsocketController;",null]}