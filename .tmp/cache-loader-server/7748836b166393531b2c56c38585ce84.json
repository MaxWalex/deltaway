{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\httpsServer.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\httpsServer.js","mtime":1671546360000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.startHttpsServer = exports.httpsRedirect = exports.verification = undefined;\n\nvar _https = require('https');\n\nvar _https2 = _interopRequireDefault(_https);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _expressHttpToHttps = require('express-http-to-https');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction verification(app) {\n    app.use(function (req, res, next) {\n        if (req.originalUrl.match(/^\\/.well-known\\/pki-validation\\/validation.txt/)) {\n            return res.sendFile(_path2.default.resolve(__dirname, 'https', 'verification.txt'));\n        }\n\n        next();\n    });\n}\n\nfunction httpsRedirect(app) {\n    var ignoreHttpsHosts = [/:(\\d{4})/];\n\n    // redirects\n    app.use((0, _expressHttpToHttps.redirectToHTTPS)(ignoreHttpsHosts, [], 301));\n}\n\nfunction startHttpsServer(app) {\n    var HTTPS_PORT = 443;\n\n    // TODO: /server/https добавьте приватный ключ и сертификат\n    var credentials = {\n        key: _fs2.default.readFileSync('server/https/private.key'),\n        cert: _fs2.default.readFileSync('server/https/certificate.crt'),\n        ca: _fs2.default.readFileSync('server/https/certificate_ca.crt')\n    };\n\n    var httpsServer = _https2.default.createServer(credentials, app);\n\n    httpsServer.listen(HTTPS_PORT);\n}\n\nexports.verification = verification;\nexports.httpsRedirect = httpsRedirect;\nexports.startHttpsServer = startHttpsServer;",null]}