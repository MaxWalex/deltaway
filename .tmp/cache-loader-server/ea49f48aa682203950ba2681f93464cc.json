{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\db\\services\\download.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\db\\services\\download.js","mtime":1671546372000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = download;\n\nvar _constants = require('../../../../constants/constants');\n\nvar _mongodbBackup = require('mongodb-backup');\n\nvar _mongodbBackup2 = _interopRequireDefault(_mongodbBackup);\n\nvar _format = require('date-fns/format');\n\nvar _format2 = _interopRequireDefault(_format);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _rimraf = require('rimraf');\n\nvar _rimraf2 = _interopRequireDefault(_rimraf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TEMP_FOLDER = _path2.default.join(__dirname, 'api/admin/db/temp');\n\nfunction download(req, res) {\n    try {\n        var dumpName = 'dump-' + (0, _format2.default)(new Date(), 'yyyy-MM-dd') + '.tar';\n\n        if (_fs2.default.existsSync(TEMP_FOLDER)) {\n            _rimraf2.default.sync(TEMP_FOLDER);\n        }\n        _fs2.default.mkdirSync(TEMP_FOLDER);\n\n        (0, _mongodbBackup2.default)({\n            uri: _constants.DATABASE_URL,\n            root: TEMP_FOLDER,\n            parser: 'json',\n            tar: dumpName,\n            callback: function callback(err) {\n                if (err) {\n                    return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                }\n\n                var host = req.get('host');\n\n                res.status(_constants.OKEY_STATUS_CODE).send(req.protocol + '://' + host + '/server/api/admin/db/temp/' + dumpName);\n            }\n        });\n    } catch (e) {\n        return res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n    }\n}\ndownload.i = 'download';\ndownload.i = 'download';",null]}