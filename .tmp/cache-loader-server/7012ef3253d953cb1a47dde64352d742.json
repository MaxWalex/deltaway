{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--5-2!/home/vps/ppf/server/controllers/ordersController.js","dependencies":[{"path":"/home/vps/ppf/server/controllers/ordersController.js","mtime":1671127397684},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ordersEvents = undefined;\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _getAllUsers = require('../api/client/user/queries/getAllUsers');\n\nvar _getAllUsers2 = _interopRequireDefault(_getAllUsers);\n\nvar _getOpenedOrders = require('../api/client/order/queries/getOpenedOrders');\n\nvar _getOpenedOrders2 = _interopRequireDefault(_getOpenedOrders);\n\nvar _closeAllOrders = require('../api/client/order/services/closeAllOrders');\n\nvar _closeAllOrders2 = _interopRequireDefault(_closeAllOrders);\n\nvar _calcUserOrdersChanges = require('../../src/apps/client/utils/calcUserOrdersChanges');\n\nvar _calcUserOrdersChanges2 = _interopRequireDefault(_calcUserOrdersChanges);\n\nvar _pricesController = require('../controllers/pricesController');\n\nvar _constants = require('../constants/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ordersEvents = exports.ordersEvents = new _eventemitter2.default();\n\nvar usersVar = void 0;\nvar ordersMapByUserIdVar = void 0;\n\nfunction handlePriceChange(_ref) {\n    var prices = _ref.prices,\n        assetPriceChange = _ref.assetPriceChange;\n\n    usersVar.forEach(function (user) {\n        var userOrders = ordersMapByUserIdVar[user.id];\n\n        if (!userOrders || !userOrders.length || !userOrders.some(function (order) {\n            return order.assetName === assetPriceChange.name;\n        })) {\n            return;\n        }\n\n        var _calcUserOrdersChange = (0, _calcUserOrdersChanges2.default)(user, userOrders, prices),\n            balance = _calcUserOrdersChange.balance;\n\n        var newBalance = balance;\n        user.bonuses && user.bonuses > 0 ? newBalance += user.bonuses : '';\n        user.credFacilities && user.credFacilities > 0 ? newBalance += user.credFacilities : '';\n\n        if (newBalance <= 0) {\n            (0, _closeAllOrders2.default)(user.id);\n        }\n    });\n}\n\nvar OrdersController = function () {\n    function OrdersController() {\n        (0, _classCallCheck3.default)(this, OrdersController);\n\n        ordersEvents.on('dbUpdate', this.setCalculator);\n    }\n\n    (0, _createClass3.default)(OrdersController, [{\n        key: 'start',\n        value: function start() {\n            this.setCalculator();\n        }\n    }, {\n        key: 'setCalculator',\n        value: function setCalculator() {\n            _pricesController.pricesEvents.removeListener(_constants.SYMBOL_PRICE_CHANGE_EVENT, handlePriceChange);\n\n            Promise.all([(0, _getAllUsers2.default)(), (0, _getOpenedOrders2.default)()]).then(function (_ref2) {\n                var _ref3 = (0, _slicedToArray3.default)(_ref2, 2),\n                    users = _ref3[0],\n                    orders = _ref3[1];\n\n                var ordersMapByUserId = orders.reduce(function (result, order) {\n                    if (!result[order.userId]) {\n                        result[order.userId] = [];\n                    }\n\n                    result[order.userId].push(order);\n\n                    return result;\n                }, {});\n                usersVar = users;\n                ordersMapByUserIdVar = ordersMapByUserId;\n                _pricesController.pricesEvents.on(_constants.SYMBOL_PRICE_CHANGE_EVENT, handlePriceChange);\n            });\n        }\n    }]);\n    return OrdersController;\n}();\n\nvar ordersController = new OrdersController();\n\nexports.default = ordersController;",null]}