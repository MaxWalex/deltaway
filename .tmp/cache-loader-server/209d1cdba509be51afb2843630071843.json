{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\order\\services\\editOrder.js","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\server\\api\\admin\\order\\services\\editOrder.js","mtime":1671546372000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nexports.default = editOrder;\n\nvar _constants = require('../../../../constants/constants');\n\nvar _prepareOrder = require('../utils/prepareOrder');\n\nvar _prepareOrder2 = _interopRequireDefault(_prepareOrder);\n\nvar _editOrder = require('../../../client/order/queries/editOrder');\n\nvar _editOrder2 = _interopRequireDefault(_editOrder);\n\nvar _editUser = require('../../../client/user/queries/editUser');\n\nvar _editUser2 = _interopRequireDefault(_editUser);\n\nvar _getOrderById = require('../../../client/order/queries/getOrderById');\n\nvar _getOrderById2 = _interopRequireDefault(_getOrderById);\n\nvar _getUserById = require('../../../client/user/queries/getUserById');\n\nvar _getUserById2 = _interopRequireDefault(_getUserById);\n\nvar _getAssetValues = require('../../../../../src/apps/client/utils/getAssetValues');\n\nvar _getAssetValues2 = _interopRequireDefault(_getAssetValues);\n\nvar _constants2 = require('../../../../../src/apps/client/constants/constants');\n\nvar _symbols = require('../../../../constants/symbols');\n\nvar _model = require('../../../client/order/model');\n\nvar _model2 = _interopRequireDefault(_model);\n\nvar _calculateBuyPrice = require('../../../../../src/apps/client/utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nvar _pricesController = require('../../../../controllers/pricesController');\n\nvar _pricesController2 = _interopRequireDefault(_pricesController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction editOrder(req, res) {\n    var _this = this;\n\n    (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n        var order, user, orders, freeBalance, totalPledge, _orders$reduce, pledge, symbolPrice, symbolInfo, realSymbolPrice, assetValues;\n\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n                switch (_context2.prev = _context2.next) {\n                    case 0:\n                        order = (0, _prepareOrder2.default)(req.body);\n\n                        if (!order.isClosed) {\n                            _context2.next = 5;\n                            break;\n                        }\n\n                        (0, _getOrderById2.default)(order.id).then(function (prevOrder) {\n                            (0, _getUserById2.default)(order.userId).then(function () {\n                                var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(user) {\n                                    var prevAsset, asset, prevProfit, profit, prevCommission, commission, updatedUser;\n                                    return _regenerator2.default.wrap(function _callee$(_context) {\n                                        while (1) {\n                                            switch (_context.prev = _context.next) {\n                                                case 0:\n                                                    if (!(!order || order.userId !== user.id)) {\n                                                        _context.next = 2;\n                                                        break;\n                                                    }\n\n                                                    return _context.abrupt('return', res.status(_constants.BAD_REQUEST_STATUS_CODE).send());\n\n                                                case 2:\n                                                    prevAsset = _symbols.CHART_SYMBOL_INFO_MAP[prevOrder.assetName];\n                                                    asset = _symbols.CHART_SYMBOL_INFO_MAP[prevOrder.assetName];\n                                                    prevProfit = (0, _getAssetValues.getProfit)(prevOrder.amount, prevOrder.openingPrice, prevOrder.closedPrice, prevOrder.type, prevAsset);\n                                                    profit = (0, _getAssetValues.getProfit)(order.amount, order.openingPrice, order.closedPrice, order.type, asset);\n                                                    prevCommission = (0, _getAssetValues.getCommission)(prevOrder.pledge, _constants2.COMMISSION);\n                                                    commission = (0, _getAssetValues.getCommission)(order.pledge, _constants2.COMMISSION);\n                                                    updatedUser = {\n                                                        id: order.userId,\n                                                        balance: user.balance - prevProfit + prevCommission + profit - commission\n                                                    };\n\n\n                                                    Promise.all([(0, _editOrder2.default)(order), (0, _editUser2.default)(updatedUser)]).then(function (_ref3) {\n                                                        var _ref4 = (0, _slicedToArray3.default)(_ref3, 1),\n                                                            order = _ref4[0];\n\n                                                        res.status(_constants.OKEY_STATUS_CODE).send(order);\n                                                    }).catch(function () {\n                                                        res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                                                    });\n\n                                                case 10:\n                                                case 'end':\n                                                    return _context.stop();\n                                            }\n                                        }\n                                    }, _callee, _this);\n                                }));\n\n                                return function (_x) {\n                                    return _ref2.apply(this, arguments);\n                                };\n                            }()).catch(function () {\n                                res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                            });\n                        }).catch(function () {\n                            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                        });\n                        _context2.next = 17;\n                        break;\n\n                    case 5:\n                        _context2.next = 7;\n                        return (0, _getUserById2.default)(order.userId);\n\n                    case 7:\n                        user = _context2.sent;\n                        _context2.next = 10;\n                        return _model2.default.find({ isClosed: false });\n\n                    case 10:\n                        orders = _context2.sent;\n                        freeBalance = void 0;\n                        totalPledge = void 0;\n\n                        if (orders.length) {\n                            _orders$reduce = orders.reduce(function (result, item) {\n                                return {\n                                    pledge: result.pledge + item.pledge\n                                };\n                            }, { pledge: 0 }), pledge = _orders$reduce.pledge;\n                            symbolPrice = _pricesController2.default.prices[order.assetName];\n                            symbolInfo = _symbols.CHART_SYMBOL_INFO_MAP[order.assetName];\n                            realSymbolPrice = order.type === 'buy' ? (0, _calculateBuyPrice2.default)(symbolInfo.name, symbolPrice) : symbolPrice;\n                            assetValues = (0, _getAssetValues2.default)(symbolInfo, { openingPrice: order.openingPrice, amount: order.amount, type: order.type }, realSymbolPrice, user.balance, _constants2.COMMISSION);\n\n\n                            totalPledge = pledge;\n                            freeBalance = assetValues.balance - totalPledge;\n                        }\n\n                        if (!(freeBalance && order.pledge > freeBalance && order.pledge > totalPledge)) {\n                            _context2.next = 16;\n                            break;\n                        }\n\n                        return _context2.abrupt('return', res.status(_constants.BAD_REQUEST_STATUS_CODE).send({ error: 'Залог больше свободных средств' }));\n\n                    case 16:\n\n                        (0, _editOrder2.default)(order).then(function (order) {\n                            res.status(_constants.OKEY_STATUS_CODE).send(order);\n                        }).catch(function () {\n                            res.status(_constants.SERVER_ERROR_STATUS_CODE).end();\n                        });\n\n                    case 17:\n                    case 'end':\n                        return _context2.stop();\n                }\n            }\n        }, _callee2, _this);\n    }))();\n}\neditOrder.i = 'editOrder';\neditOrder.i = 'editOrder';",null]}