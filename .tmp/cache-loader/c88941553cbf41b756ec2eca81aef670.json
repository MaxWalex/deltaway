{"remainingRequest":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js??ref--13-2!/Users/dimasabitov/Downloads/deltaway.20/src/apps/admin/ui/components/OrderForm/orderFormSchema.js","dependencies":[{"path":"/Users/dimasabitov/Downloads/deltaway.20/src/apps/admin/ui/components/OrderForm/orderFormSchema.js","mtime":1671546443454},{"path":"/Users/dimasabitov/Downloads/deltaway.20/.babelrc","mtime":1671546158632},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/cache-loader/dist/cjs.js","mtime":1671546959174},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js","mtime":1671546957682}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$data = _ref.data;\n\n    _ref$data = _ref$data === undefined ? {} : _ref$data;\n    var title = _ref$data.title,\n        isClosed = _ref$data.isClosed;\n\n    return {\n        fields: [{\n            component: _FormFieldTitle2.default,\n            name: 'form-title',\n            schema: {\n                label: title,\n                variant: 'h5'\n            }\n        }, {\n            component: _FormFieldInput2.default,\n            name: 'assetName',\n            schema: {\n                label: 'Название актива'\n            },\n            validators: [{ name: 'required', options: { text: 'Заполните название актива' } }]\n        }, {\n            component: _FormFieldTitle2.default,\n            name: 'titleType',\n            schema: {\n                label: 'Статус актива',\n                variant: 'h6'\n            }\n        }, {\n            component: _FormFieldRadios2.default,\n            name: 'type',\n            schema: {\n                label: 'Статус актива',\n                options: [{ label: 'Покупка', value: 'buy' }, { label: 'Продажа', value: 'sell' }]\n            }\n        }, {\n            component: _FormFieldDate2.default,\n            name: 'createdAt',\n            schema: {\n                label: 'Дата создания ордера'\n            },\n            type: 'datetime-local',\n            validators: [{ name: 'required', options: { text: 'Заполните дату создания ордера' } }]\n        }, {\n            component: _FormFieldInput2.default,\n            name: 'openingPrice',\n            schema: {\n                label: 'Цена открытия'\n            },\n            validators: [{ name: 'required', options: { text: 'Заполните цену открытия' } }]\n        }, {\n            component: _FormFieldInput2.default,\n            name: 'amount',\n            schema: {\n                label: 'Объем'\n            },\n            validators: [{ name: 'required', options: { text: 'Заполните объем' } }]\n        }, {\n            component: _FormFieldInput2.default,\n            name: 'pledge',\n            schema: {\n                label: 'Залог'\n            },\n            validators: [{ name: 'required', options: { text: 'Заполните залог' } }]\n        }, (0, _extends3.default)({\n            component: _FormFieldDate2.default,\n            name: 'closedAt',\n            schema: {\n                label: 'Дата закрытия ордера'\n            },\n            type: 'datetime-local',\n            hidden: !isClosed\n        }, isClosed ? {\n            validators: [{ name: 'required', options: { text: 'Заполните дату закрытия ордера' } }]\n        } : {}), (0, _extends3.default)({\n            component: _FormFieldInput2.default,\n            name: 'closedPrice',\n            schema: {\n                label: 'Цена закрытия'\n            },\n            hidden: !isClosed\n        }, isClosed ? {\n            validators: [{ name: 'required', options: { text: 'Заполните цену закрытия' } }]\n        } : {}), {\n            component: _FormFieldInput2.default,\n            name: 'takeProfit',\n            schema: {\n                label: 'Take profit'\n            },\n            validators: []\n        }, {\n            component: _FormFieldInput2.default,\n            name: 'stopLoss',\n            schema: {\n                label: 'stopLoss'\n            },\n            validators: []\n        }, {\n            component: _FormFieldButton2.default,\n            name: 'submit',\n            schema: {\n                label: 'Сохранить',\n                type: 'submit'\n            }\n        }]\n    };\n};\n\nvar _FormFieldInput = require('../Form/fields/FormFieldInput/FormFieldInput.jsx');\n\nvar _FormFieldInput2 = _interopRequireDefault(_FormFieldInput);\n\nvar _FormFieldTitle = require('../Form/fields/FormFieldTitle/FormFieldTitle.jsx');\n\nvar _FormFieldTitle2 = _interopRequireDefault(_FormFieldTitle);\n\nvar _FormFieldButton = require('../Form/fields/FormFieldButton/FormFieldButton');\n\nvar _FormFieldButton2 = _interopRequireDefault(_FormFieldButton);\n\nvar _FormFieldDate = require('../Form/fields/FormFieldDate/FormFieldDate');\n\nvar _FormFieldDate2 = _interopRequireDefault(_FormFieldDate);\n\nvar _FormFieldRadios = require('../Form/fields/FormFieldRadios/FormFieldRadios');\n\nvar _FormFieldRadios2 = _interopRequireDefault(_FormFieldRadios);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }",{"version":3,"sources":["src/apps/admin/ui/components/OrderForm/orderFormSchema.js"],"names":["data","title","isClosed","fields","component","FormFieldTitle","name","schema","label","variant","FormFieldInput","validators","options","text","FormFieldRadios","value","FormFieldDate","type","hidden","FormFieldButton"],"mappings":"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","file":"orderFormSchema.js","sourceRoot":"/Users/dimasabitov/Downloads/deltaway.20","sourcesContent":["import FormFieldInput from '../Form/fields/FormFieldInput/FormFieldInput.jsx';\nimport FormFieldTitle from '../Form/fields/FormFieldTitle/FormFieldTitle.jsx';\nimport FormFieldButton from '../Form/fields/FormFieldButton/FormFieldButton';\nimport FormFieldDate from '../Form/fields/FormFieldDate/FormFieldDate';\nimport FormFieldRadios from '../Form/fields/FormFieldRadios/FormFieldRadios';\n\nexport default function ({ data: { title, isClosed } = {} } = {}) {\n    return {\n        fields: [\n            {\n                component: FormFieldTitle,\n                name: 'form-title',\n                schema: {\n                    label: title,\n                    variant: 'h5'\n                }\n            },\n            {\n                component: FormFieldInput,\n                name: 'assetName',\n                schema: {\n                    label: 'Название актива'\n                },\n                validators: [\n                    { name: 'required', options: { text: 'Заполните название актива' } }\n                ]\n            },\n            {\n                component: FormFieldTitle,\n                name: 'titleType',\n                schema: {\n                    label: 'Статус актива',\n                    variant: 'h6'\n                }\n            },\n            {\n                component: FormFieldRadios,\n                name: 'type',\n                schema: {\n                    label: 'Статус актива',\n                    options: [\n                        { label: 'Покупка', value: 'buy' },\n                        { label: 'Продажа', value: 'sell' }\n                    ]\n                }\n            },\n            {\n                component: FormFieldDate,\n                name: 'createdAt',\n                schema: {\n                    label: 'Дата создания ордера'\n                },\n                type: 'datetime-local',\n                validators: [\n                    { name: 'required', options: { text: 'Заполните дату создания ордера' } }\n                ]\n            },\n            {\n                component: FormFieldInput,\n                name: 'openingPrice',\n                schema: {\n                    label: 'Цена открытия'\n                },\n                validators: [\n                    { name: 'required', options: { text: 'Заполните цену открытия' } }\n                ]\n            },\n            {\n                component: FormFieldInput,\n                name: 'amount',\n                schema: {\n                    label: 'Объем'\n                },\n                validators: [\n                    { name: 'required', options: { text: 'Заполните объем' } }\n                ]\n            },\n            {\n                component: FormFieldInput,\n                name: 'pledge',\n                schema: {\n                    label: 'Залог'\n                },\n                validators: [\n                    { name: 'required', options: { text: 'Заполните залог' } }\n                ]\n            },\n            {\n                component: FormFieldDate,\n                name: 'closedAt',\n                schema: {\n                    label: 'Дата закрытия ордера'\n                },\n                type: 'datetime-local',\n                hidden: !isClosed,\n                ...(isClosed ? {\n                    validators: [\n                        { name: 'required', options: { text: 'Заполните дату закрытия ордера' } }\n                    ]\n                } : {})\n            },\n            {\n                component: FormFieldInput,\n                name: 'closedPrice',\n                schema: {\n                    label: 'Цена закрытия'\n                },\n                hidden: !isClosed,\n                ...(isClosed ? {\n                    validators: [\n                        { name: 'required', options: { text: 'Заполните цену закрытия' } }\n                    ]\n                } : {})\n            },\n            {\n                component: FormFieldInput,\n                name: 'takeProfit',\n                schema: {\n                    label: 'Take profit'\n                },\n                validators: []\n            },\n            {\n                component: FormFieldInput,\n                name: 'stopLoss',\n                schema: {\n                    label: 'stopLoss'\n                },\n                validators: []\n            },\n            {\n                component: FormFieldButton,\n                name: 'submit',\n                schema: {\n                    label: 'Сохранить',\n                    type: 'submit'\n                }\n            }\n        ]\n    };\n}\n"]}]}