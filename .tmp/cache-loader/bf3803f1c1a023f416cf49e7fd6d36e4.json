{"remainingRequest":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js??ref--13-2!/Users/dimasabitov/Downloads/deltaway.20/src/apps/client/services/client/assetPriceWebsocket.js","dependencies":[{"path":"/Users/dimasabitov/Downloads/deltaway.20/src/apps/client/services/client/assetPriceWebsocket.js","mtime":1671546522974},{"path":"/Users/dimasabitov/Downloads/deltaway.20/.babelrc","mtime":1671546158632},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/cache-loader/dist/cjs.js","mtime":1671546959174},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js","mtime":1671546957682}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _socket = require('socket.io-client');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _calcUserOrdersChanges = require('../../utils/calcUserOrdersChanges');\n\nvar _calcUserOrdersChanges2 = _interopRequireDefault(_calcUserOrdersChanges);\n\nvar _formatPrice = require('../../utils/formatPrice');\n\nvar _formatPrice2 = _interopRequireDefault(_formatPrice);\n\nvar _symbols = require('../../../../../server/constants/symbols');\n\nvar _constants = require('../../../../../server/constants/constants');\n\nvar _calculateBuyPrice = require('../../utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WEBSOCKET_URL = process.env.NODE_ENV === 'production' ? 'wss://' + _constants.DOMAIN + ':8443' : 'ws://localhost:8443';\n\nvar DISCONNECT_TIMEOUT = 2000;\n\nvar AssetPriceWebsocketController = function () {\n    function AssetPriceWebsocketController() {\n        (0, _classCallCheck3.default)(this, AssetPriceWebsocketController);\n        this.events = new _eventemitter2.default();\n        this.prices = {};\n        this.changes = {};\n        this.user = null;\n        this.prevBalance = 0;\n        this.mainBalance = 0;\n        this.balance = 0;\n        this.freeBalance = 0;\n        this.totalPledge = 0;\n        this.totalProfit = 0;\n        this.marginLevel = 0;\n        this.orders = [];\n        this.isConnected = false;\n    }\n\n    (0, _createClass3.default)(AssetPriceWebsocketController, [{\n        key: 'setPrices',\n        value: function setPrices(prices) {\n            this.prices = prices;\n        }\n    }, {\n        key: 'setUser',\n        value: function setUser(user, orders) {\n            this.user = user;\n            this.orders = orders;\n\n            if (user) {\n                this.calcUpdatedOrders();\n            }\n        }\n    }, {\n        key: 'connect',\n        value: function connect() {\n            var _this = this;\n\n            if (this.socket) {\n                return;\n            }\n            var socket = (0, _socket2.default)(WEBSOCKET_URL, { transports: ['websocket'] });\n\n            this.socket = socket;\n\n            socket.on('message', function (data) {\n                _this.prices[data.name] = data.price;\n                _this.changes[data.name] = data.changes;\n                _this.events.emit('data', data);\n                _this.user && _this.handleMessage(data);\n            });\n\n            socket.on('connect', function () {\n                _this.events.emit('status', true);\n                _this.isConnected = true;\n            });\n\n            socket.on('disconnect', function () {\n                _this.isConnected = false;\n                setTimeout(function () {\n                    if (!_this.isConnected) {\n                        _this.events.emit('status', false);\n                    }\n                }, DISCONNECT_TIMEOUT);\n            });\n        }\n    }, {\n        key: 'handleMessage',\n        value: function handleMessage(data) {\n            var orders = this.orders;\n\n            if (!orders || !orders.length || !orders.some(function (order) {\n                return order.assetName === data.name;\n            })) {\n                return;\n            }\n\n            this.calcUpdatedOrders();\n        }\n    }, {\n        key: 'calcUpdatedOrders',\n        value: function calcUpdatedOrders() {\n            var user = this.user,\n                orders = this.orders;\n\n            var _calcUserOrdersChange = (0, _calcUserOrdersChanges2.default)(user, orders, assetPriceWebsocketController.prices),\n                ordersInfo = _calcUserOrdersChange.ordersInfo,\n                balance = _calcUserOrdersChange.balance;\n\n            var newOrders = orders.map(function (order) {\n                var asset = _symbols.CHART_SYMBOL_INFO_MAP[order.assetName];\n                var updatedOrder = ordersInfo[order.id];\n                var currentPrice = updatedOrder.price;\n                var currentPriceReal = order.type === 'buy' ? (0, _calculateBuyPrice2.default)(asset.name, currentPrice) : currentPrice;\n                var diffPrice = (0, _formatPrice2.default)(currentPriceReal - order.openingPrice);\n\n                return (0, _extends3.default)({}, order, {\n                    currentPrice: currentPriceReal,\n                    commission: updatedOrder.commission,\n                    diffPrice: diffPrice,\n                    profit: updatedOrder.profit\n                });\n            });\n\n            var _newOrders$reduce = newOrders.reduce(function (result, order) {\n                return {\n                    pledge: result.pledge + order.pledge,\n                    profit: result.profit + order.profit,\n                    commission: result.commission + order.commission\n                };\n            }, { pledge: 0, profit: 0, commission: 0 }),\n                totalPledge = _newOrders$reduce.pledge,\n                totalProfit = _newOrders$reduce.profit;\n\n            this.prevBalance = this.balance;\n            this.balance = balance;\n            this.mainBalance = user.mainBalance;\n            this.totalPledge = totalPledge;\n            this.freeBalance = balance - totalPledge /* - totalCommission */;\n            this.orders = newOrders;\n            this.totalProfit = totalProfit;\n\n            var balanceToSend = balance;\n\n            if (user.bonuses > 0) {\n                balanceToSend += user.bonuses;\n                this.freeBalance += user.bonuses;\n                this.mainBalance += user.bonuses;\n            }\n\n            if (user.credFacilities > 0) {\n                balanceToSend += user.credFacilities;\n                this.freeBalance += user.credFacilities;\n                this.mainBalance += user.credFacilities;\n            }\n\n            this.balance = balanceToSend;\n\n            this.marginLevel = this.freeBalance / totalPledge * 100;\n\n            if (this.prevBalance !== this.balance) {\n                this.events.emit('ordersAndBalance', {\n                    mainBalance: this.mainBalance,\n                    balance: balanceToSend,\n                    freeBalance: this.freeBalance,\n                    orders: newOrders,\n                    totalPledge: totalPledge,\n                    totalProfit: totalProfit,\n                    marginLevel: !isFinite(this.marginLevel) ? 0 : this.marginLevel,\n                    bonuses: user.bonuses,\n                    credFacilities: user.credFacilities\n                });\n            }\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.socket && this.socket.disconnect();\n            this.socket = null;\n        }\n    }]);\n    return AssetPriceWebsocketController;\n}();\n\nvar assetPriceWebsocketController = new AssetPriceWebsocketController();\n\nexports.default = assetPriceWebsocketController;\nassetPriceWebsocketController.i = 'assetPriceWebsocketController';\nassetPriceWebsocketController.i = 'assetPriceWebsocketController';",{"version":3,"sources":["src/apps/client/services/client/assetPriceWebsocket.js"],"names":["WEBSOCKET_URL","process","env","NODE_ENV","DOMAIN","DISCONNECT_TIMEOUT","AssetPriceWebsocketController","events","EventEmitter","prices","changes","user","prevBalance","mainBalance","balance","freeBalance","totalPledge","totalProfit","marginLevel","orders","isConnected","calcUpdatedOrders","socket","transports","on","data","name","price","emit","handleMessage","setTimeout","length","some","order","assetName","assetPriceWebsocketController","ordersInfo","newOrders","map","asset","CHART_SYMBOL_INFO_MAP","updatedOrder","id","currentPrice","currentPriceReal","type","diffPrice","openingPrice","commission","profit","reduce","result","pledge","balanceToSend","bonuses","credFacilities","isFinite","disconnect"],"mappings":"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","file":"assetPriceWebsocket.js","sourceRoot":"/Users/dimasabitov/Downloads/deltaway.20","sourcesContent":["import io from 'socket.io-client';\n\nimport EventEmitter from 'eventemitter3';\nimport calcUserOrdersChanges from '../../utils/calcUserOrdersChanges';\nimport formatPrice from '../../utils/formatPrice';\nimport { CHART_SYMBOL_INFO_MAP } from '../../../../../server/constants/symbols';\nimport { DOMAIN } from '../../../../../server/constants/constants';\nimport calculateBuyingPrice from '../../utils/calculateBuyPrice';\n\nconst WEBSOCKET_URL = process.env.NODE_ENV === 'production' ? `wss://${DOMAIN}:8443` : 'ws://localhost:8443';\n\nconst DISCONNECT_TIMEOUT = 2000;\n\nclass AssetPriceWebsocketController {\n    events = new EventEmitter();\n    prices = {};\n    changes = {};\n    user = null;\n    prevBalance = 0;\n    mainBalance = 0;\n    balance = 0;\n    freeBalance = 0;\n    totalPledge = 0;\n    totalProfit = 0;\n    marginLevel = 0;\n    orders = [];\n    isConnected = false;\n\n    setPrices (prices) {\n        this.prices = prices;\n    }\n\n    setUser (user, orders) {\n        this.user = user;\n        this.orders = orders;\n\n        if (user) {\n            this.calcUpdatedOrders();\n        }\n    }\n\n    connect () {\n        if (this.socket) {\n            return;\n        }\n        const socket = io(WEBSOCKET_URL, { transports: ['websocket'] });\n\n        this.socket = socket;\n\n        socket.on('message', data => {\n            this.prices[data.name] = data.price;\n            this.changes[data.name] = data.changes;\n            this.events.emit('data', data);\n            this.user && this.handleMessage(data);\n        });\n\n        socket.on('connect', () => {\n            this.events.emit('status', true);\n            this.isConnected = true;\n        });\n\n        socket.on('disconnect', () => {\n            this.isConnected = false;\n            setTimeout(() => {\n                if (!this.isConnected) {\n                    this.events.emit('status', false);\n                }\n            }, DISCONNECT_TIMEOUT);\n        });\n    }\n\n    handleMessage (data) {\n        const { orders } = this;\n        if (!orders || !orders.length || !orders.some(order => order.assetName === data.name)) {\n            return;\n        }\n\n        this.calcUpdatedOrders();\n    }\n\n    calcUpdatedOrders () {\n        const { user, orders } = this;\n\n        const { ordersInfo, balance } = calcUserOrdersChanges(user, orders, assetPriceWebsocketController.prices);\n        const newOrders = orders\n            .map(order => {\n                const asset = CHART_SYMBOL_INFO_MAP[order.assetName];\n                const updatedOrder = ordersInfo[order.id];\n                const currentPrice = updatedOrder.price;\n                const currentPriceReal = order.type === 'buy' ? calculateBuyingPrice(asset.name, currentPrice) : currentPrice;\n                const diffPrice = formatPrice(currentPriceReal - order.openingPrice);\n\n                return {\n                    ...order,\n                    currentPrice: currentPriceReal,\n                    commission: updatedOrder.commission,\n                    diffPrice,\n                    profit: updatedOrder.profit\n                };\n            });\n\n        const { pledge: totalPledge, profit: totalProfit } = newOrders\n            .reduce((result, order) => {\n                return ({\n                    pledge: result.pledge + order.pledge,\n                    profit: result.profit + order.profit,\n                    commission: result.commission + order.commission\n                });\n            }, { pledge: 0, profit: 0, commission: 0 });\n\n        this.prevBalance = this.balance;\n        this.balance = balance;\n        this.mainBalance = user.mainBalance;\n        this.totalPledge = totalPledge;\n        this.freeBalance = balance - totalPledge/* - totalCommission */;\n        this.orders = newOrders;\n        this.totalProfit = totalProfit;\n\n        let balanceToSend = balance;\n\n        if (user.bonuses > 0) {\n            balanceToSend += user.bonuses;\n            this.freeBalance += user.bonuses;\n            this.mainBalance += user.bonuses;\n        }\n\n        if (user.credFacilities > 0) {\n            balanceToSend += user.credFacilities;\n            this.freeBalance += user.credFacilities;\n            this.mainBalance += user.credFacilities;\n        }\n\n        this.balance = balanceToSend;\n\n        this.marginLevel = (this.freeBalance / totalPledge) * 100;\n\n        if (this.prevBalance !== this.balance) {\n            this.events.emit('ordersAndBalance', {\n                mainBalance: this.mainBalance,\n                balance: balanceToSend,\n                freeBalance: this.freeBalance,\n                orders: newOrders,\n                totalPledge,\n                totalProfit,\n                marginLevel: !isFinite(this.marginLevel) ? 0 : this.marginLevel,\n                bonuses: user.bonuses,\n                credFacilities: user.credFacilities\n            });\n        }\n    }\n\n    disconnect () {\n        this.socket && this.socket.disconnect();\n        this.socket = null;\n    }\n}\n\nconst assetPriceWebsocketController = new AssetPriceWebsocketController();\n\nexport default assetPriceWebsocketController;\n"]}]}