{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--13-2!/home/vps/ppf/src/apps/admin/ui/components/Form/Form.jsx","dependencies":[{"path":"/home/vps/ppf/src/apps/admin/ui/components/Form/Form.jsx","mtime":1671127622072},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends7 = require('babel-runtime/helpers/extends');\n\nvar _extends8 = _interopRequireDefault(_extends7);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _FormControl = require('@material-ui/core/FormControl');\n\nvar _FormControl2 = _interopRequireDefault(_FormControl);\n\nvar _FormHelperText = require('@material-ui/core/FormHelperText');\n\nvar _FormHelperText2 = _interopRequireDefault(_FormHelperText);\n\nvar _Snackbar = require('@material-ui/core/Snackbar');\n\nvar _Snackbar2 = _interopRequireDefault(_Snackbar);\n\nvar _SnackbarContent = require('@material-ui/core/SnackbarContent');\n\nvar _SnackbarContent2 = _interopRequireDefault(_SnackbarContent);\n\nvar _Error = require('@material-ui/icons/Error');\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _getLangsValuesForArray = require('./utils/getLangsValuesForArray');\n\nvar _getLangsValuesForArray2 = _interopRequireDefault(_getLangsValuesForArray);\n\nvar _getLangsValuesForObject = require('./utils/getLangsValuesForObject');\n\nvar _getLangsValuesForObject2 = _interopRequireDefault(_getLangsValuesForObject);\n\nvar _noop = require('@tinkoff/utils/function/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _empty = require('@tinkoff/utils/is/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _plainObject = require('@tinkoff/utils/is/plainObject');\n\nvar _plainObject2 = _interopRequireDefault(_plainObject);\n\nvar _array = require('@tinkoff/utils/is/array');\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _string = require('@tinkoff/utils/is/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _each = require('@tinkoff/utils/array/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _any = require('@tinkoff/utils/array/any');\n\nvar _any2 = _interopRequireDefault(_any);\n\nvar _clone = require('@tinkoff/utils/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _validators = require('./validators');\n\nvar _validators2 = _interopRequireDefault(_validators);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar materialStyles = function materialStyles(theme) {\n    return {\n        form: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%'\n        },\n        error: {\n            backgroundColor: theme.palette.error.dark\n        },\n        success: {\n            backgroundColor: theme.palette.success.main\n        },\n        icon: {\n            fontSize: 20\n        },\n        iconVariant: {\n            opacity: 0.9,\n            marginRight: theme.spacing.unit\n        },\n        message: {\n            display: 'flex',\n            alignItems: 'center'\n        },\n        margin: {\n            margin: theme.spacing.unit\n        }\n    };\n};\n\nvar Form = (_temp = _class = function (_Component) {\n    (0, _inherits3.default)(Form, _Component);\n\n    function Form() {\n        var _ref,\n            _this2 = this;\n\n        (0, _classCallCheck3.default)(this, Form);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args)));\n\n        _this.getFieldsValidators = function () {\n            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n            return props.schema.fields.reduce(function (validators, field) {\n                if (!field.validators) {\n                    return validators;\n                }\n\n                var langs = _this.props.langs;\n\n                var newValidators = {};\n\n                if (field.valueLangStructure) {\n                    newValidators = langs.reduce(function (result, lang) {\n                        return (0, _extends8.default)({}, result, (0, _defineProperty3.default)({}, lang + '_' + field.name, field.validators));\n                    }, {});\n                } else {\n                    newValidators[field.name] = field.validators;\n                }\n\n                return (0, _extends8.default)({}, validators, newValidators);\n            }, {});\n        };\n\n        _this.getAnotherLangsChanges = function (field, value) {\n            if (!field.valueLangStructure || (0, _string2.default)(field.valueLangStructure)) {\n                return {};\n            }\n\n            var langs = _this.props.langs;\n            var _this$state = _this.state,\n                values = _this$state.values,\n                currentLang = _this$state.lang;\n\n            var changesByLang = {};\n\n            langs.forEach(function (lang) {\n                if (currentLang !== lang) {\n                    if ((0, _array2.default)(field.valueLangStructure) && (0, _array2.default)(value)) {\n                        return (0, _getLangsValuesForArray2.default)([lang + '_' + field.name], [lang + '_' + field.name], value, field.valueLangStructure, values, changesByLang);\n                    }\n\n                    if ((0, _plainObject2.default)(field.valueLangStructure) && (0, _plainObject2.default)(value)) {\n                        return (0, _getLangsValuesForObject2.default)([lang + '_' + field.name], [lang + '_' + field.name], value, field.valueLangStructure, values, changesByLang);\n                    }\n                }\n            }, {});\n\n            return changesByLang;\n        };\n\n        _this.createField = function (field, i) {\n            var _React$createElement, _React$createElement2, _React$createElement3;\n\n            if (field.hidden) {\n                return;\n            }\n\n            var _this$state2 = _this.state,\n                values = _this$state2.values,\n                validationMessages = _this$state2.validationMessages,\n                lang = _this$state2.lang;\n\n            var FieldComponent = field.component;\n            var fieldName = field.valueLangStructure ? lang + '_' + field.name : field.name;\n            var validationMessage = validationMessages[fieldName];\n\n            var fieldProps = (0, _extends8.default)({\n                onChange: _this.handleFieldChange(field, fieldName),\n                onBlur: _this.handleFieldBlur(field),\n                name: fieldName,\n                value: values[fieldName],\n                isRequired: (0, _any2.default)(function (validator) {\n                    return validator.name === 'required';\n                }, field.validators || []),\n                validationMessage: validationMessage,\n                schema: field.schema || {},\n                key: i,\n                news: _this.props.initialValues\n            }, field.type ? { type: field.type } : {});\n\n            return _react2.default.createElement(\n                _FormControl2.default,\n                (_React$createElement3 = { key: i, error: !!validationMessage, 'data-qa-file': 'Form'\n                }, (0, _defineProperty3.default)(_React$createElement3, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement3, 'data-qa-file', 'Form'), _React$createElement3),\n                _react2.default.createElement(FieldComponent, (0, _extends8.default)({}, fieldProps, {\n                    'data-qa-file': 'Form'\n                })),\n                field.hint && _react2.default.createElement(\n                    _FormHelperText2.default,\n                    (_React$createElement = {\n                        'data-qa-file': 'Form'\n                    }, (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'Form'), _React$createElement),\n                    field.hint\n                ),\n                validationMessage && _react2.default.createElement(\n                    _FormHelperText2.default,\n                    (_React$createElement2 = {\n                        'data-qa-file': 'Form'\n                    }, (0, _defineProperty3.default)(_React$createElement2, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement2, 'data-qa-file', 'Form'), _React$createElement2),\n                    validationMessage\n                )\n            );\n        };\n\n        _this.validateForm = function () {\n            var _this$props = _this.props,\n                langs = _this$props.langs,\n                schema = _this$props.schema;\n            var currentLang = _this.state.lang;\n\n            var validationMessages = {};\n            var isValid = true;\n            var isAnotherLangValid = true;\n            var isCurrentLangValid = true;\n\n            schema.fields.map(function (field) {\n                var newValidationMessages = {};\n\n                if (field.valueLangStructure) {\n                    newValidationMessages = langs.reduce(function (result, lang) {\n                        var validationMessage = _this.validateField(lang + '_' + field.name);\n\n                        if (validationMessage) {\n                            if (isCurrentLangValid) {\n                                if (currentLang === lang) {\n                                    isCurrentLangValid = false;\n                                }\n                            }\n                            if (isAnotherLangValid) {\n                                if (currentLang !== lang) {\n                                    isAnotherLangValid = false;\n                                }\n                            }\n\n                            return (0, _extends8.default)({}, result, (0, _defineProperty3.default)({}, lang + '_' + field.name, validationMessage));\n                        }\n\n                        return result;\n                    }, {});\n                } else {\n                    var validationMessage = _this.validateField(field.name);\n\n                    if (validationMessage) {\n                        if (isCurrentLangValid) {\n                            isCurrentLangValid = false;\n                        }\n\n                        newValidationMessages[field.name] = validationMessage;\n                    }\n                }\n\n                if (!(0, _empty2.default)(newValidationMessages)) {\n                    isValid = false;\n                }\n\n                validationMessages = (0, _extends8.default)({}, validationMessages, newValidationMessages);\n            });\n\n            _this.setState({\n                validationMessages: validationMessages\n            });\n\n            return { isValid: isValid, isOnlyAnotherLangInvalid: !isAnotherLangValid && isCurrentLangValid };\n        };\n\n        _this.validateField = function (filedName) {\n            var values = _this.state.values;\n\n            var validators = _this.validators[filedName] || [];\n            var validationMessage = '';\n\n            (0, _each2.default)(function (_ref2) {\n                var name = _ref2.name,\n                    options = _ref2.options;\n\n                var validatorOptions = (0, _plainObject2.default)(options) ? options : {};\n                var validator = _validators2.default[name];\n\n                if (validator && !validationMessage) {\n                    validationMessage = validator(values[filedName], validatorOptions, values, filedName);\n                }\n            }, validators);\n\n            return validationMessage;\n        };\n\n        _this.handleFieldChange = function (field, fieldName) {\n            return function (value) {\n                var changes = (0, _extends8.default)({}, _this.getAnotherLangsChanges(field, value), (0, _defineProperty3.default)({}, fieldName, value));\n                var _this$state3 = _this.state,\n                    values = _this$state3.values,\n                    validationMessages = _this$state3.validationMessages;\n\n                var newValues = (0, _extends8.default)({}, values, changes);\n\n                if ('lang' in changes) {\n                    _this.setState({\n                        lang: newValues.lang\n                    });\n                }\n\n                _this.props.onChange(newValues, changes);\n                _this.setState({\n                    values: newValues,\n                    validationMessages: (0, _extends8.default)({}, validationMessages, (0, _defineProperty3.default)({}, fieldName, ''))\n                });\n            };\n        };\n\n        _this.handleFieldBlur = function (field) {\n            return function () {\n                var _this$state4 = _this.state,\n                    validationMessages = _this$state4.validationMessages,\n                    lang = _this$state4.lang;\n\n\n                var fieldName = field.valueLangStructure ? lang + '_' + field.name : field.name;\n                var validationMessage = _this.validateField(fieldName);\n\n                _this.setState({\n                    validationMessages: (0, _extends8.default)({}, validationMessages, (0, _defineProperty3.default)({}, fieldName, validationMessage))\n                });\n            };\n        };\n\n        _this.handleSubmit = function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(event) {\n                var _this$validateForm, isValid, isOnlyAnotherLangInvalid;\n\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                event.preventDefault();\n\n                                if (!_this.state.isClickedSubmit) {\n                                    _context.next = 3;\n                                    break;\n                                }\n\n                                return _context.abrupt('return');\n\n                            case 3:\n\n                                _this.state.isClickedSubmit = true;\n\n                                _this$validateForm = _this.validateForm(), isValid = _this$validateForm.isValid, isOnlyAnotherLangInvalid = _this$validateForm.isOnlyAnotherLangInvalid;\n\n                                if (!isValid) {\n                                    _context.next = 17;\n                                    break;\n                                }\n\n                                _context.prev = 6;\n                                _context.next = 9;\n                                return _this.props.onSubmit(_this.state.values);\n\n                            case 9:\n                                _context.next = 15;\n                                break;\n\n                            case 11:\n                                _context.prev = 11;\n                                _context.t0 = _context['catch'](6);\n\n                                _this.setState({ errorText: _context.t0.error });\n                                _this.state.isClickedSubmit = false;\n\n                            case 15:\n                                _context.next = 22;\n                                break;\n\n                            case 17:\n                                if (!isOnlyAnotherLangInvalid) {\n                                    _context.next = 20;\n                                    break;\n                                }\n\n                                _this.setState({\n                                    errorText: 'Поправьте валидацию для других языков'\n                                });\n                                return _context.abrupt('return');\n\n                            case 20:\n\n                                _this.setState({\n                                    errorText: 'Поправьте валидацию'\n                                });\n\n                                _this.state.isClickedSubmit = false;\n\n                            case 22:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, _this2, [[6, 11]]);\n            }));\n\n            return function (_x2) {\n                return _ref3.apply(this, arguments);\n            };\n        }();\n\n        _this.handleHideFailMessage = function () {\n            _this.setState({\n                errorText: ''\n            });\n        };\n\n        _this.state = {\n            values: (0, _clone2.default)(_this.props.initialValues),\n            validationMessages: {},\n            lang: _this.props.langs[0],\n            isClickedSubmit: _this.props.isClickedSubmit\n        };\n        _this.validators = _this.getFieldsValidators();\n        return _this;\n    }\n\n    // static getDerivedStateFromProps (props, state) {\n    //     if (props.isClickedSubmit !== state.isClickedSubmit) {\n    //         return {\n    //             showSuccess: true\n    //         };\n    //     }\n    //\n    //     return null;\n    // }\n\n    (0, _createClass3.default)(Form, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps, nextContext) {\n            if (nextProps.schema !== this.props.schema) {\n                this.validators = this.getFieldsValidators(nextProps);\n            }\n\n            if (nextProps.initialValues !== this.props.initialValues) {\n                this.setState({\n                    values: (0, _clone2.default)(nextProps.initialValues)\n                });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this,\n                _React$createElement4,\n                _React$createElement5,\n                _React$createElement6,\n                _React$createElement7,\n                _React$createElement8,\n                _React$createElement9;\n\n            var _props = this.props,\n                schema = _props.schema,\n                classes = _props.classes;\n            var errorText = this.state.errorText;\n\n\n            return _react2.default.createElement(\n                'div',\n                (_React$createElement9 = {\n                    'data-qa-file': 'Form'\n                }, (0, _defineProperty3.default)(_React$createElement9, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement9, 'data-qa-file', 'Form'), _React$createElement9),\n                _react2.default.createElement(\n                    'form',\n                    (_React$createElement4 = { onSubmit: this.handleSubmit, className: classes.form, 'data-qa-file': 'Form'\n                    }, (0, _defineProperty3.default)(_React$createElement4, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement4, 'data-qa-file', 'Form'), _React$createElement4),\n                    schema.fields.map(function (field, i) {\n                        return _this3.createField(field, i);\n                    })\n                ),\n                _react2.default.createElement(\n                    _Snackbar2.default,\n                    (_React$createElement8 = {\n                        anchorOrigin: {\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        },\n                        onClose: this.handleHideFailMessage,\n                        open: !!errorText,\n                        autoHideDuration: 2000,\n                        'data-qa-file': 'Form'\n                    }, (0, _defineProperty3.default)(_React$createElement8, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement8, 'data-qa-file', 'Form'), _React$createElement8),\n                    _react2.default.createElement(_SnackbarContent2.default, (_React$createElement7 = {\n                        className: (0, _classnames2.default)(classes.error, classes.margin),\n                        message: _react2.default.createElement(\n                            'span',\n                            (_React$createElement6 = { id: 'client-snackbar', className: classes.message, 'data-qa-file': 'Form'\n                            }, (0, _defineProperty3.default)(_React$createElement6, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement6, 'data-qa-file', 'Form'), _React$createElement6),\n                            _react2.default.createElement(_Error2.default, (_React$createElement5 = { className: (0, _classnames2.default)(classes.icon, classes.iconVariant), 'data-qa-file': 'Form'\n                            }, (0, _defineProperty3.default)(_React$createElement5, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement5, 'data-qa-file', 'Form'), _React$createElement5)),\n                            errorText\n                        ),\n                        'data-qa-file': 'Form'\n                    }, (0, _defineProperty3.default)(_React$createElement7, 'data-qa-file', 'Form'), (0, _defineProperty3.default)(_React$createElement7, 'data-qa-file', 'Form'), _React$createElement7))\n                )\n            );\n        }\n    }]);\n    return Form;\n}(_react.Component), _class.defaultProps = {\n    initialValues: {},\n    langs: [],\n    onChange: _noop2.default,\n    onSubmit: _noop2.default,\n    hidden: false,\n    isClickedSubmit: false\n}, _temp);\nexports.default = (0, _styles.withStyles)(materialStyles)(Form);",null]}