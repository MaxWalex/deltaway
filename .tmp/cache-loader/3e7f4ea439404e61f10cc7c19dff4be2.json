{"remainingRequest":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js??ref--13-2!/Users/dimasabitov/Downloads/deltaway.20/src/apps/admin/ui/components/TransactionForm/TransactionForm.jsx","dependencies":[{"path":"/Users/dimasabitov/Downloads/deltaway.20/src/apps/admin/ui/components/TransactionForm/TransactionForm.jsx","mtime":1671546444219},{"path":"/Users/dimasabitov/Downloads/deltaway.20/.babelrc","mtime":1671546158632},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/cache-loader/dist/cjs.js","mtime":1671546959174},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js","mtime":1671546957682}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class,\n    _temp,\n    _initialiseProps,\n    _jsxFileName = '/Users/dimasabitov/Downloads/deltaway.20/src/apps/admin/ui/components/TransactionForm/TransactionForm.jsx';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _transactionFormSchema = require('./transactionFormSchema');\n\nvar _transactionFormSchema2 = _interopRequireDefault(_transactionFormSchema);\n\nvar _saveTransaction2 = require('../../../services/saveTransaction');\n\nvar _saveTransaction3 = _interopRequireDefault(_saveTransaction2);\n\nvar _editTransaction2 = require('../../../services/editTransaction');\n\nvar _editTransaction3 = _interopRequireDefault(_editTransaction2);\n\nvar _Form = require('../Form/Form');\n\nvar _Form2 = _interopRequireDefault(_Form);\n\nvar _noop = require('@tinkoff/utils/function/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _prop = require('@tinkoff/utils/object/prop');\n\nvar _prop2 = _interopRequireDefault(_prop);\n\nvar _pick = require('@tinkoff/utils/object/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _uniqid = require('uniqid');\n\nvar _uniqid2 = _interopRequireDefault(_uniqid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TRANSACTIONS_VALUES = ['userId', 'id', 'type'];\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n    var data = _ref.data;\n\n    return {\n        users: data.users\n    };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n        saveTransaction: function saveTransaction(payload) {\n            return dispatch((0, _saveTransaction3.default)(payload));\n        },\n        editTransaction: function editTransaction(payload) {\n            return dispatch((0, _editTransaction3.default)(payload));\n        }\n    };\n};\n\nvar TransactionForm = (_temp = _class = function (_Component) {\n    (0, _inherits3.default)(TransactionForm, _Component);\n\n    function TransactionForm(props) {\n        (0, _classCallCheck3.default)(this, TransactionForm);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (TransactionForm.__proto__ || Object.getPrototypeOf(TransactionForm)).call(this, props));\n\n        _initialiseProps.call(_this);\n\n        var _this$props = _this.props,\n            transaction = _this$props.transaction,\n            activeUser = _this$props.activeUser;\n\n        _this.dirName = transaction.dirName || (0, _uniqid2.default)();\n\n        _this.initialValues = (0, _extends3.default)({\n            value: transaction.value || '',\n            content: transaction.content || '',\n            userId: activeUser.id\n        }, (0, _pick2.default)(TRANSACTIONS_VALUES, transaction));\n        _this.id = (0, _prop2.default)('id', transaction);\n        _this.state = {\n            activeUser: activeUser\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(TransactionForm, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            console.log(this.props);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _React$createElement;\n\n            var isClickedSubmit = this.props.isClickedSubmit;\n\n\n            return _react2.default.createElement(_Form2.default, (_React$createElement = {\n                initialValues: this.initialValues,\n                schema: (0, _transactionFormSchema2.default)({\n                    data: {\n                        title: this.id ? 'Редактирование транзакции' : 'Добавление транзакции',\n                        dirName: this.dirName\n                    }\n                }),\n                onChange: this.handleChange,\n                onSubmit: this.handleSubmit,\n                isClickedSubmit: isClickedSubmit,\n                'data-qa-file': 'TransactionForm',\n                __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 112\n                },\n                __self: this\n            }, (0, _defineProperty3.default)(_React$createElement, '__self', this), (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'TransactionForm'), (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'TransactionForm'), _React$createElement));\n        }\n    }]);\n    return TransactionForm;\n}(_react.Component), _class.propTypes = {\n    saveTransaction: _propTypes2.default.func.isRequired,\n    editTransaction: _propTypes2.default.func.isRequired,\n    onDone: _propTypes2.default.func,\n    transaction: _propTypes2.default.object,\n    users: _propTypes2.default.array,\n    activeUser: _propTypes2.default.object,\n    isClickedSubmit: _propTypes2.default.bool\n}, _class.defaultProps = {\n    onDone: _noop2.default,\n    transaction: {},\n    users: [],\n    activeUser: {}\n}, _initialiseProps = function _initialiseProps() {\n    var _this2 = this;\n\n    this.getTransactionPayload = function (_ref2) {\n        var value = _ref2.value,\n            content = _ref2.content,\n            type = _ref2.type;\n        var activeUser = _this2.props.activeUser;\n\n        return {\n            dirName: _this2.dirName,\n            value: value,\n            content: content,\n            userId: activeUser.id,\n            type: type\n        };\n    };\n\n    this.handleSubmit = function () {\n        var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(values) {\n            var transactionPayload, _props, editTransaction, saveTransaction, onDone, activeUser;\n\n            return _regenerator2.default.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            transactionPayload = _this2.getTransactionPayload(values);\n                            _props = _this2.props, editTransaction = _props.editTransaction, saveTransaction = _props.saveTransaction, onDone = _props.onDone, activeUser = _props.activeUser;\n\n                            if (!_this2.id) {\n                                _context.next = 7;\n                                break;\n                            }\n\n                            _context.next = 5;\n                            return editTransaction({ transaction: (0, _extends3.default)({}, transactionPayload, { id: _this2.id }), user: activeUser });\n\n                        case 5:\n                            _context.next = 9;\n                            break;\n\n                        case 7:\n                            _context.next = 9;\n                            return saveTransaction(transactionPayload);\n\n                        case 9:\n\n                            onDone();\n\n                        case 10:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this2);\n        }));\n\n        return function (_x) {\n            return _ref3.apply(this, arguments);\n        };\n    }();\n\n    this.handleChange = function (values, changes) {\n        switch (Object.keys(changes)[0]) {\n            case 'userId':\n                var activeUser = _this2.props.users.find(function (user) {\n                    return user.id === changes.userId;\n                });\n                var lang = _this2.state.lang;\n\n\n                values.transactionId = activeUser.texts[lang].transaction[0].id;\n                break;\n        }\n    };\n}, _temp);\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(TransactionForm);",{"version":3,"sources":["src/apps/admin/ui/components/TransactionForm/TransactionForm.jsx"],"names":["TRANSACTIONS_VALUES","mapStateToProps","data","users","mapDispatchToProps","dispatch","saveTransaction","payload","editTransaction","TransactionForm","props","transaction","activeUser","dirName","initialValues","value","content","userId","id","state","console","log","isClickedSubmit","title","handleChange","handleSubmit","Component","propTypes","PropTypes","func","isRequired","onDone","object","array","bool","defaultProps","noop","getTransactionPayload","type","values","transactionPayload","user","changes","Object","keys","find","lang","transactionId","texts"],"mappings":"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","file":"TransactionForm.jsx","sourceRoot":"/Users/dimasabitov/Downloads/deltaway.20","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport getSchema from './transactionFormSchema';\nimport saveTransaction from '../../../services/saveTransaction';\nimport editTransaction from '../../../services/editTransaction';\n\nimport Form from '../Form/Form';\n\nimport noop from '@tinkoff/utils/function/noop';\nimport prop from '@tinkoff/utils/object/prop';\nimport pick from '@tinkoff/utils/object/pick';\nimport uniqid from 'uniqid';\n\nconst TRANSACTIONS_VALUES = ['userId', 'id', 'type'];\n\nconst mapStateToProps = ({ data }) => {\n    return {\n        users: data.users\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveTransaction: payload => dispatch(saveTransaction(payload)),\n    editTransaction: payload => dispatch(editTransaction(payload))\n});\n\nclass TransactionForm extends Component {\n    static propTypes = {\n        saveTransaction: PropTypes.func.isRequired,\n        editTransaction: PropTypes.func.isRequired,\n        onDone: PropTypes.func,\n        transaction: PropTypes.object,\n        users: PropTypes.array,\n        activeUser: PropTypes.object,\n        isClickedSubmit: PropTypes.bool\n    };\n\n    static defaultProps = {\n        onDone: noop,\n        transaction: {},\n        users: [],\n        activeUser: {}\n    };\n\n    constructor (props) {\n        super(props);\n\n        const { transaction, activeUser } = this.props;\n        this.dirName = transaction.dirName || uniqid();\n\n        this.initialValues = {\n            value: transaction.value || '',\n            content: transaction.content || '',\n            userId: activeUser.id,\n            ...pick(TRANSACTIONS_VALUES, transaction)\n        };\n        this.id = prop('id', transaction);\n        this.state = {\n            activeUser: activeUser\n        };\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n    }\n\n    getTransactionPayload = (\n        {\n            value,\n            content,\n            type\n        }) => {\n        const { activeUser } = this.props;\n        return {\n            dirName: this.dirName,\n            value,\n            content,\n            userId: activeUser.id,\n            type\n        };\n    };\n\n    handleSubmit = async values => {\n        const transactionPayload = this.getTransactionPayload(values);\n        const { editTransaction, saveTransaction, onDone, activeUser } = this.props;\n\n        if (this.id) {\n            await editTransaction({ transaction: { ...transactionPayload, id: this.id }, user: activeUser });\n        } else {\n            await saveTransaction(transactionPayload);\n        }\n\n        onDone();\n    };\n\n    handleChange = (values, changes) => {\n        switch (Object.keys(changes)[0]) {\n        case 'userId':\n            const activeUser = this.props.users.find(user => user.id === changes.userId);\n            const { lang } = this.state;\n\n            values.transactionId = activeUser.texts[lang].transaction[0].id;\n            break;\n        }\n    };\n\n    render () {\n        const { isClickedSubmit } = this.props;\n\n        return <Form\n            initialValues={this.initialValues}\n            schema={getSchema({\n                data: {\n                    title: this.id ? 'Редактирование транзакции' : 'Добавление транзакции',\n                    dirName: this.dirName\n                }\n            })}\n            onChange={this.handleChange}\n            onSubmit={this.handleSubmit}\n            isClickedSubmit={isClickedSubmit}\n        />;\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm);\n"]}]}