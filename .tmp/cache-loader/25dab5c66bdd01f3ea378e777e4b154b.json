{"remainingRequest":"/home/vps/ppf/node_modules/babel-loader/lib/index.js??ref--13-2!/home/vps/ppf/src/apps/client/services/client/assetPriceWebsocket.js","dependencies":[{"path":"/home/vps/ppf/src/apps/client/services/client/assetPriceWebsocket.js","mtime":1671127618328},{"path":"/home/vps/ppf/.babelrc","mtime":1671127885972},{"path":"/home/vps/ppf/node_modules/cache-loader/dist/cjs.js","mtime":1671127657171},{"path":"/home/vps/ppf/node_modules/babel-loader/lib/index.js","mtime":1671127654997}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _socket = require('socket.io-client');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _calcUserOrdersChanges = require('../../utils/calcUserOrdersChanges');\n\nvar _calcUserOrdersChanges2 = _interopRequireDefault(_calcUserOrdersChanges);\n\nvar _formatPrice = require('../../utils/formatPrice');\n\nvar _formatPrice2 = _interopRequireDefault(_formatPrice);\n\nvar _symbols = require('../../../../../server/constants/symbols');\n\nvar _constants = require('../../../../../server/constants/constants');\n\nvar _calculateBuyPrice = require('../../utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WEBSOCKET_URL = process.env.NODE_ENV === 'production' ? 'wss://' + _constants.DOMAIN + ':8443' : 'ws://localhost:8443';\n\nvar DISCONNECT_TIMEOUT = 2000;\n\nvar AssetPriceWebsocketController = function () {\n    function AssetPriceWebsocketController() {\n        (0, _classCallCheck3.default)(this, AssetPriceWebsocketController);\n        this.events = new _eventemitter2.default();\n        this.prices = {};\n        this.changes = {};\n        this.user = null;\n        this.prevBalance = 0;\n        this.mainBalance = 0;\n        this.balance = 0;\n        this.freeBalance = 0;\n        this.totalPledge = 0;\n        this.totalProfit = 0;\n        this.marginLevel = 0;\n        this.orders = [];\n        this.isConnected = false;\n    }\n\n    (0, _createClass3.default)(AssetPriceWebsocketController, [{\n        key: 'setPrices',\n        value: function setPrices(prices) {\n            this.prices = prices;\n        }\n    }, {\n        key: 'setUser',\n        value: function setUser(user, orders) {\n            this.user = user;\n            this.orders = orders;\n\n            if (user) {\n                this.calcUpdatedOrders();\n            }\n        }\n    }, {\n        key: 'connect',\n        value: function connect() {\n            var _this = this;\n\n            if (this.socket) {\n                return;\n            }\n            var socket = (0, _socket2.default)(WEBSOCKET_URL, { transports: ['websocket'] });\n\n            this.socket = socket;\n\n            socket.on('message', function (data) {\n                _this.prices[data.name] = data.price;\n                _this.changes[data.name] = data.changes;\n                _this.events.emit('data', data);\n                _this.user && _this.handleMessage(data);\n            });\n\n            socket.on('connect', function () {\n                _this.events.emit('status', true);\n                _this.isConnected = true;\n            });\n\n            socket.on('disconnect', function () {\n                _this.isConnected = false;\n                setTimeout(function () {\n                    if (!_this.isConnected) {\n                        _this.events.emit('status', false);\n                    }\n                }, DISCONNECT_TIMEOUT);\n            });\n        }\n    }, {\n        key: 'handleMessage',\n        value: function handleMessage(data) {\n            var orders = this.orders;\n\n            if (!orders || !orders.length || !orders.some(function (order) {\n                return order.assetName === data.name;\n            })) {\n                return;\n            }\n\n            this.calcUpdatedOrders();\n        }\n    }, {\n        key: 'calcUpdatedOrders',\n        value: function calcUpdatedOrders() {\n            var user = this.user,\n                orders = this.orders;\n\n            var _calcUserOrdersChange = (0, _calcUserOrdersChanges2.default)(user, orders, assetPriceWebsocketController.prices),\n                ordersInfo = _calcUserOrdersChange.ordersInfo,\n                balance = _calcUserOrdersChange.balance;\n\n            var newOrders = orders.map(function (order) {\n                var asset = _symbols.CHART_SYMBOL_INFO_MAP[order.assetName];\n                var updatedOrder = ordersInfo[order.id];\n                var currentPrice = updatedOrder.price;\n                var currentPriceReal = order.type === 'buy' ? (0, _calculateBuyPrice2.default)(asset.name, currentPrice) : currentPrice;\n                var diffPrice = (0, _formatPrice2.default)(currentPriceReal - order.openingPrice);\n\n                return (0, _extends3.default)({}, order, {\n                    currentPrice: currentPriceReal,\n                    commission: updatedOrder.commission,\n                    diffPrice: diffPrice,\n                    profit: updatedOrder.profit\n                });\n            });\n\n            var _newOrders$reduce = newOrders.reduce(function (result, order) {\n                return {\n                    pledge: result.pledge + order.pledge,\n                    profit: result.profit + order.profit,\n                    commission: result.commission + order.commission\n                };\n            }, { pledge: 0, profit: 0, commission: 0 }),\n                totalPledge = _newOrders$reduce.pledge,\n                totalProfit = _newOrders$reduce.profit;\n\n            this.prevBalance = this.balance;\n            this.balance = balance;\n            this.mainBalance = user.mainBalance;\n            this.totalPledge = totalPledge;\n            this.freeBalance = balance - totalPledge /* - totalCommission */;\n            this.orders = newOrders;\n            this.totalProfit = totalProfit;\n\n            var balanceToSend = balance;\n\n            if (user.bonuses > 0) {\n                balanceToSend += user.bonuses;\n                this.freeBalance += user.bonuses;\n                this.mainBalance += user.bonuses;\n            }\n\n            if (user.credFacilities > 0) {\n                balanceToSend += user.credFacilities;\n                this.freeBalance += user.credFacilities;\n                this.mainBalance += user.credFacilities;\n            }\n\n            this.balance = balanceToSend;\n\n            this.marginLevel = this.freeBalance / totalPledge * 100;\n\n            if (this.prevBalance !== this.balance) {\n                this.events.emit('ordersAndBalance', {\n                    mainBalance: this.mainBalance,\n                    balance: balanceToSend,\n                    freeBalance: this.freeBalance,\n                    orders: newOrders,\n                    totalPledge: totalPledge,\n                    totalProfit: totalProfit,\n                    marginLevel: !isFinite(this.marginLevel) ? 0 : this.marginLevel,\n                    bonuses: user.bonuses,\n                    credFacilities: user.credFacilities\n                });\n            }\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.socket && this.socket.disconnect();\n            this.socket = null;\n        }\n    }]);\n    return AssetPriceWebsocketController;\n}();\n\nvar assetPriceWebsocketController = new AssetPriceWebsocketController();\n\nexports.default = assetPriceWebsocketController;\nassetPriceWebsocketController.i = 'assetPriceWebsocketController';\nassetPriceWebsocketController.i = 'assetPriceWebsocketController';",null]}