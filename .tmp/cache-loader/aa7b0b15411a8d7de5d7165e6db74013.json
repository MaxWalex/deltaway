{"remainingRequest":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js??ref--13-2!C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\src\\apps\\client\\ui\\pages\\MainPage\\MainPage.jsx","dependencies":[{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\src\\apps\\client\\ui\\pages\\MainPage\\MainPage.jsx","mtime":1671546510000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\.babelrc","mtime":1671546158000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671546958000},{"path":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20\\node_modules\\babel-loader\\lib\\index.js","mtime":1671546956000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class,\n    _temp2,\n    _jsxFileName = 'C:\\\\Users\\\\cherv\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\deltaway.20\\\\src\\\\apps\\\\client\\\\ui\\\\pages\\\\MainPage\\\\MainPage.jsx';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _getHistoryPrice2 = require('../../../services/client/getHistoryPrice');\n\nvar _getHistoryPrice3 = _interopRequireDefault(_getHistoryPrice2);\n\nvar _assetPriceWebsocket = require('../../../services/client/assetPriceWebsocket');\n\nvar _assetPriceWebsocket2 = _interopRequireDefault(_assetPriceWebsocket);\n\nvar _getPeriodByTimeframe = require('./utils/getPeriodByTimeframe');\n\nvar _getPeriodByTimeframe2 = _interopRequireDefault(_getPeriodByTimeframe);\n\nvar _getChartDateByTimeframe = require('./utils/getChartDateByTimeframe');\n\nvar _getChartDateByTimeframe2 = _interopRequireDefault(_getChartDateByTimeframe);\n\nvar _formatPriceToString = require('../../../utils/formatPriceToString');\n\nvar _formatPriceToString2 = _interopRequireDefault(_formatPriceToString);\n\nvar _last = require('@tinkoff/utils/array/last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _lodash = require('lodash.min');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = require('lodash.max');\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nvar _undefined = require('@tinkoff/utils/is/undefined');\n\nvar _undefined2 = _interopRequireDefault(_undefined);\n\nvar _empty = require('@tinkoff/utils/is/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _symbols = require('../../../../../../server/constants/symbols');\n\nvar _MainPage = require('./MainPage.css');\n\nvar _MainPage2 = _interopRequireDefault(_MainPage);\n\nvar _calculateBuyPrice = require('../../../utils/calculateBuyPrice');\n\nvar _calculateBuyPrice2 = _interopRequireDefault(_calculateBuyPrice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PRICE_UP_COLOR = '#0ea97b';\nvar PRICE_DOWN_COLOR = 'rgba(235, 87, 87, 0.75)';\n\nif (typeof window !== 'undefined') {\n    var _require = require('lightweight-charts/dist/lightweight-charts.esm.production.js'),\n        createChart = _require.createChart;\n}\n\nvar chartOptions = {\n    layout: {\n        backgroundColor: 'rgb(20,26,43)',\n        border: 'solid',\n        textColor: '#d1d4dc'\n    },\n    grid: {\n        vertLines: {\n            color: 'rgba(42, 46, 57, 0.5)'\n        },\n        horzLines: {\n            color: 'rgba(42, 46, 57, 0.5)'\n        }\n    },\n    rightPriceScale: {\n        borderVisible: true\n    },\n    crosshair: {\n        horzLine: {\n            visible: true\n        }\n    },\n    timeScale: {\n        borderVisible: true,\n        timeVisible: true\n    },\n    watermark: {\n        color: 'rgba(231,232,238,0.05)',\n        visible: true,\n        fontFamily: 'FuturaPT-Medium',\n        fontSize: 128,\n        letterSpacing: '0.012em'\n    }\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n    var application = _ref.application,\n        charts = _ref.charts;\n\n    return {\n        chartTimeframe: charts.chartTimeframe,\n        chartType: charts.chartType,\n        chartSymbolGroup: charts.chartSymbolGroup,\n        chartSymbol: charts.chartSymbol,\n        mediaWidth: application.media.width,\n        mediaHeight: application.media.height\n    };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n        getHistoryPrice: function getHistoryPrice(payload) {\n            return dispatch((0, _getHistoryPrice3.default)(payload));\n        }\n    };\n};\n\nvar MainPage = (_temp2 = _class = function (_Component) {\n    (0, _inherits3.default)(MainPage, _Component);\n\n    function MainPage() {\n        var _ref2;\n\n        var _temp, _this, _ret;\n\n        (0, _classCallCheck3.default)(this, MainPage);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = MainPage.__proto__ || Object.getPrototypeOf(MainPage)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {\n            width: 0,\n            height: 0,\n            asset: {}\n        }, _this.prevFloatingPrice = null, _this.times = [], _this.prices = [], _this.openPrices = [], _this.lowPrices = [], _this.highPrices = [], _this.chartsContainer = _react2.default.createRef(), _this.status = true, _this.isLoading = false, _this.getSeriesByType = function (type) {\n            switch (type) {\n                case 'candlesticks':\n                    return _this.chart.addCandlestickSeries({\n                        upColor: PRICE_UP_COLOR,\n                        downColor: PRICE_DOWN_COLOR,\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n                case 'heikinashi':\n                    return _this.chart.addCandlestickSeries({\n                        upColor: PRICE_UP_COLOR,\n                        downColor: PRICE_DOWN_COLOR,\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n                case 'hlc':\n                    return _this.chart.addBarSeries({\n                        thinBars: false,\n                        upColor: PRICE_UP_COLOR,\n                        downColor: PRICE_DOWN_COLOR,\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n                case 'line':\n                    return _this.chart.addLineSeries({\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n                case 'area':\n                    return _this.chart.addAreaSeries({\n                        lineColor: '#1567a4',\n                        topColor: 'rgba(30,118,187,0.6)',\n                        bottomColor: 'rgba(34, 150, 243, 0)',\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n                case 'dots':\n                    return _this.chart.addLineSeries({\n                        color: 'transparent',\n                        crosshairMarkerVisible: false,\n                        priceFormat: {\n                            precision: 4,\n                            minMove: 0.0001\n                        }\n                    });\n            }\n        }, _this.getCandlesData = function (type, _ref3) {\n            var low = _ref3.low,\n                high = _ref3.high,\n                open = _ref3.open,\n                close = _ref3.close,\n                _ref3$newCandle = _ref3.newCandle,\n                newCandle = _ref3$newCandle === undefined ? true : _ref3$newCandle;\n\n            if (type !== 'heikinashi' || !_this.haOpen || !_this.haClose) {\n                return { low: low, high: high, open: open, close: close };\n            }\n\n            var haClose = (low + high + open + close) / 4;\n            var haOpen = (_this.haOpen + _this.haClose) / 2;\n            var haHigh = (0, _lodash4.default)([high, haOpen, haClose]);\n            var haLow = (0, _lodash2.default)([low, haOpen, haClose]);\n\n            if (newCandle) {\n                _this.haOpen = haOpen;\n                _this.haClose = haClose;\n            }\n\n            return {\n                low: haLow,\n                high: haHigh,\n                open: haOpen,\n                close: haClose\n            };\n        }, _this.findRightDimensions = function () {\n            var width = window.innerWidth - 84;\n            var height = window.innerHeight - 150;\n\n            if (window.innerWidth <= 1024 && window.innerWidth <= window.innerHeight) {\n                width = window.innerWidth;\n                height = window.innerHeight - 187;\n            }\n            if (window.innerWidth <= 1024 && window.innerWidth > window.innerHeight) {\n                width = window.innerWidth;\n                height = window.innerHeight - 135;\n            }\n            if (window.innerWidth <= 544) {\n                width = window.innerWidth;\n                height = window.innerHeight - 135;\n            }\n            return { width: width, height: height };\n        }, _this.setChart = function () {\n            _this.chart = createChart(_this.chartsContainer.current, (0, _extends3.default)({}, chartOptions, {\n                width: _this.findRightDimensions().width,\n                height: _this.findRightDimensions().height\n            }));\n\n            _assetPriceWebsocket2.default.events.on('data', _this.handlePriceChange);\n\n            window.addEventListener('resize', function () {\n                _this.chart.resize(_this.findRightDimensions().width, _this.findRightDimensions().height);\n            });\n\n            _this.chart.timeScale().subscribeVisibleLogicalRangeChange(_this.onVisibleLogicalRangeChanged);\n        }, _this.handleUnsubscribeVisibleLogicalRangeChange = function () {\n            _this.chart.timeScale().unsubscribeVisibleLogicalRangeChange(_this.onVisibleLogicalRangeChanged);\n        }, _this.onVisibleLogicalRangeChanged = function (newVisibleLogicalRange) {\n            // console.log('onVisibleLogicalRangeChanged');\n            var _this$props = _this.props,\n                chartSymbolGroup = _this$props.chartSymbolGroup,\n                chartSymbol = _this$props.chartSymbol,\n                chartTimeframe = _this$props.chartTimeframe,\n                chartType = _this$props.chartType;\n\n\n            if (!newVisibleLogicalRange) {\n                return;\n            }\n\n            var barsInfo = _this.series.barsInLogicalRange(newVisibleLogicalRange);\n\n            if (barsInfo !== null && barsInfo.barsBefore < 0 && !_this.isLoading) {\n                _this.setNewDataChart(chartSymbolGroup.id, chartSymbol.name, chartTimeframe.value, chartType.value, barsInfo.from, barsInfo.to);\n            }\n        }, _this.setNewDataChart = function (symbolGroup, symbol, timeframe, type, from, to) {\n            // console.log('setNewDataChart');\n            _this.isLoading = true;\n            _this.handleUnsubscribeVisibleLogicalRangeChange();\n\n            _this.props.getHistoryPrice((0, _extends3.default)({}, (0, _getPeriodByTimeframe2.default)(timeframe, symbolGroup, from), {\n                resolution: timeframe,\n                symbolGroup: symbolGroup,\n                symbol: symbol\n            })).then(function (historyData) {\n                if (_this.series) {\n                    _this.chart.removeSeries(_this.series);\n                    _this.series = null;\n                }\n\n                var series = _this.getSeriesByType(type);\n\n                _this.series = series;\n\n                if (historyData.s === 'ok') {\n                    _this.times = [].concat((0, _toConsumableArray3.default)(historyData.t.slice(0, -2)), (0, _toConsumableArray3.default)(_this.times));\n                    _this.prices = [].concat((0, _toConsumableArray3.default)(historyData.c.slice(0, -2)), (0, _toConsumableArray3.default)(_this.prices));\n                    _this.openPrices = [].concat((0, _toConsumableArray3.default)(historyData.o.slice(0, -2)), (0, _toConsumableArray3.default)(_this.openPrices));\n                    _this.lowPrices = [].concat((0, _toConsumableArray3.default)(historyData.l.slice(0, -2)), (0, _toConsumableArray3.default)(_this.lowPrices));\n                    _this.highPrices = [].concat((0, _toConsumableArray3.default)(historyData.h.slice(0, -2)), (0, _toConsumableArray3.default)(_this.highPrices));\n\n                    series.setData(_this.times.map(function (time, i) {\n                        if (i === 0) {\n                            return null;\n                        }\n\n                        return (0, _extends3.default)({\n                            time: time,\n                            value: _this.prices[i]\n                        }, _this.getCandlesData(type, {\n                            open: _this.openPrices[i],\n                            low: _this.lowPrices[i],\n                            high: _this.highPrices[i],\n                            close: _this.prices[i]\n                        }));\n                    }).filter(function (data) {\n                        return !!data;\n                    }));\n\n                    _this.chart.timeScale().setVisibleRange({ from: from, to: to });\n                    _this.chart.timeScale().subscribeVisibleLogicalRangeChange(_this.onVisibleLogicalRangeChanged);\n                    _this.isLoading = false;\n                }\n            });\n        }, _this.setNewTypeOrTimeChart = function (symbolGroup, symbol, timeframe, type) {\n            if (_this.series) {\n                _this.chart.removeSeries(_this.series);\n                _this.series = null;\n\n                _this.chart.applyOptions({\n                    watermark: {\n                        text: ''\n                    }\n                });\n\n                _this.setState({ asset: {} });\n                _this.chart.priceScale().applyOptions({ autoScale: true });\n            }\n            _this.props.getHistoryPrice((0, _extends3.default)({}, (0, _getPeriodByTimeframe2.default)(timeframe, symbolGroup), {\n                resolution: timeframe,\n                symbolGroup: symbolGroup,\n                symbol: symbol\n            })).then(function (historyData) {\n                var series = _this.getSeriesByType(type);\n\n                _this.series = series;\n\n                if (historyData.s === 'ok') {\n                    if (!(0, _undefined2.default)(_assetPriceWebsocket2.default.prices[symbol])) {\n                        historyData.c[historyData.c.length - 1] = _assetPriceWebsocket2.default.prices[symbol];\n                    }\n\n                    _this.times = historyData.t;\n                    _this.prices = historyData.c;\n                    _this.openPrices = historyData.o;\n                    _this.lowPrices = historyData.l;\n                    _this.highPrices = historyData.h;\n                    _this.prevFloatingPrice = (0, _last2.default)(_this.prices);\n\n                    _this.haOpen = historyData.o[0];\n                    _this.haClose = historyData.c[0];\n\n                    var data = historyData.t.map(function (time, i) {\n                        if (i === 0) {\n                            return null;\n                        }\n\n                        return (0, _extends3.default)({\n                            time: time,\n                            value: historyData.c[i]\n                        }, _this.getCandlesData(type, {\n                            open: historyData.o[i],\n                            low: historyData.l[i],\n                            high: historyData.h[i],\n                            close: historyData.c[i]\n                        }));\n                    }).filter(function (data) {\n                        return !!data;\n                    });\n\n                    series.setData(data);\n\n                    if (type === 'dots') {\n                        _this.markers = historyData.t.map(function (time, i) {\n                            if (i === 0) {\n                                return null;\n                            }\n\n                            return {\n                                time: time,\n                                position: 'inBar',\n                                size: 1,\n                                shape: 'circle',\n                                value: historyData.c[i],\n                                color: historyData.c[i] > historyData.c[i - 1] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                            };\n                        }).filter(function (data) {\n                            return !!data;\n                        });\n                        series.setMarkers(_this.markers);\n\n                        var lastIndex = historyData.c.length - 1;\n\n                        series.applyOptions({\n                            priceLineColor: historyData.c[lastIndex] > historyData.c[lastIndex - 1] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                        });\n                    }\n\n                    _this.chart.applyOptions({\n                        watermark: {\n                            text: '' + _symbols.CHART_SYMBOL_INFO_MAP[symbol].title\n                        }\n                    });\n\n                    _this.handleAssetSet(_this.props.chartSymbol);\n                }\n            });\n        }, _this.handleAssetSet = function (chartSymbol) {\n            var price = _assetPriceWebsocket2.default.prices[chartSymbol.name];\n            _this.setState({\n                asset: {\n                    assetName: chartSymbol.name,\n                    purchasePrice: (0, _calculateBuyPrice2.default)(chartSymbol.name, price),\n                    sellingPrice: price\n                }\n            });\n        }, _this.handlePriceChange = function (data) {\n            if (!_this.series) {\n                return;\n            }\n            var _this$props2 = _this.props,\n                chartTimeframe = _this$props2.chartTimeframe,\n                chartType = _this$props2.chartType,\n                chartSymbol = _this$props2.chartSymbol;\n\n\n            if (data.name !== chartSymbol.name) {\n                return;\n            }\n\n            _this.handleAssetSet(data);\n\n            var chartDate = (0, _getChartDateByTimeframe2.default)(data.time, chartTimeframe.value);\n            var newCandle = false;\n\n            if ((0, _last2.default)(_this.times) !== chartDate) {\n                _this.prices[_this.prices.length - 1] = _this.prevFloatingPrice;\n                _this.times.push(chartDate);\n                _this.openPrices.push(data.price);\n                _this.prices.push(data.price);\n                _this.lowPrices.push(data.price);\n                _this.highPrices.push(data.price);\n\n                newCandle = true;\n\n                if (chartType.value === 'dots') {\n                    _this.markers.push({\n                        time: chartDate,\n                        position: 'inBar',\n                        size: 1,\n                        shape: 'circle',\n                        value: data.price,\n                        color: data.price > (0, _last2.default)(_this.prices) ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                    });\n                    _this.series.setMarkers(_this.markers);\n                }\n            }\n\n            _this.prevFloatingPrice = data.price;\n            _this.prices[_this.prices.length - 1] = data.price;\n\n            if (data.price < (0, _last2.default)(_this.lowPrices)) {\n                _this.lowPrices[_this.lowPrices.length - 1] = data.price;\n            }\n            if (data.price > (0, _last2.default)(_this.highPrices)) {\n                _this.highPrices[_this.highPrices.length - 1] = data.price;\n            }\n\n            _this.series.update((0, _extends3.default)({\n                time: chartDate,\n                value: data.price\n            }, _this.getCandlesData(chartType.value, {\n                open: (0, _last2.default)(_this.openPrices),\n                low: (0, _last2.default)(_this.lowPrices),\n                high: (0, _last2.default)(_this.highPrices),\n                close: data.price,\n                newCandle: newCandle\n            })));\n\n            if (chartType.value === 'dots') {\n                var newPriceColor = data.price > _this.prices[_this.prices.length - 2] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR;\n                _this.series.applyOptions({\n                    priceLineColor: newPriceColor\n                });\n\n                if (newPriceColor !== (0, _last2.default)(_this.markers).color) {\n                    _this.markers[_this.markers.length - 1].color = newPriceColor;\n                    _this.series.setMarkers(_this.markers);\n                }\n            }\n        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(MainPage, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            // console.log('componentDidMount');\n            this.setChart();\n            this.setNewTypeOrTimeChart(this.props.chartSymbolGroup.id, this.props.chartSymbol.name, this.props.chartTimeframe.value, this.props.chartType.value);\n\n            _assetPriceWebsocket2.default.events.on('status', function (status) {\n                if (status && !_this2.status) {\n                    _this2.setNewTypeOrTimeChart(_this2.props.chartSymbolGroup.id, _this2.props.chartSymbol.name, _this2.props.chartTimeframe.value, _this2.props.chartType.value);\n                }\n\n                _this2.status = status;\n            });\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps, nextContext) {\n            // console.log('componentWillReceiveProps');\n            if (this.props.chartSymbol !== nextProps.chartSymbol || this.props.chartTimeframe !== nextProps.chartTimeframe || this.props.chartType !== nextProps.chartType) {\n                this.setNewTypeOrTimeChart(nextProps.chartSymbolGroup.id, nextProps.chartSymbol.name, nextProps.chartTimeframe.value, nextProps.chartType.value);\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _React$createElement, _React$createElement2, _React$createElement3, _React$createElement4, _React$createElement5, _React$createElement6, _React$createElement7, _React$createElement8, _React$createElement9, _React$createElement10;\n\n            var asset = this.state.asset;\n\n\n            return _react2.default.createElement(\n                'section',\n                (_React$createElement10 = { className: _MainPage2.default.root, 'data-qa-file': 'MainPage',\n                    __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 505\n                    },\n                    __self: this\n                }, (0, _defineProperty3.default)(_React$createElement10, '__self', this), (0, _defineProperty3.default)(_React$createElement10, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement10, 'data-qa-file', 'MainPage'), _React$createElement10),\n                _react2.default.createElement('section', (_React$createElement = { className: _MainPage2.default.rootChart, ref: this.chartsContainer, 'data-qa-file': 'MainPage',\n                    __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 506\n                    },\n                    __self: this\n                }, (0, _defineProperty3.default)(_React$createElement, '__self', this), (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement, 'data-qa-file', 'MainPage'), _React$createElement)),\n                !(0, _empty2.default)(asset) && _react2.default.createElement(\n                    'div',\n                    (_React$createElement9 = { className: _MainPage2.default.assetContainer, 'data-qa-file': 'MainPage',\n                        __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 509\n                        },\n                        __self: this\n                    }, (0, _defineProperty3.default)(_React$createElement9, '__self', this), (0, _defineProperty3.default)(_React$createElement9, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement9, 'data-qa-file', 'MainPage'), _React$createElement9),\n                    _react2.default.createElement(\n                        'div',\n                        (_React$createElement2 = { className: _MainPage2.default.assetTitle, 'data-qa-file': 'MainPage',\n                            __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 510\n                            },\n                            __self: this\n                        }, (0, _defineProperty3.default)(_React$createElement2, '__self', this), (0, _defineProperty3.default)(_React$createElement2, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement2, 'data-qa-file', 'MainPage'), _React$createElement2),\n                        _symbols.CHART_SYMBOL_INFO_MAP[asset.assetName].title\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        (_React$createElement5 = { className: _MainPage2.default.purchasePrice, 'data-qa-file': 'MainPage',\n                            __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 515\n                            },\n                            __self: this\n                        }, (0, _defineProperty3.default)(_React$createElement5, '__self', this), (0, _defineProperty3.default)(_React$createElement5, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement5, 'data-qa-file', 'MainPage'), _React$createElement5),\n                        _react2.default.createElement('img', (_React$createElement3 = { src: '/src/apps/client/ui/pages/MainPage/images/up.svg', 'data-qa-file': 'MainPage',\n                            __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 516\n                            },\n                            __self: this\n                        }, (0, _defineProperty3.default)(_React$createElement3, '__self', this), (0, _defineProperty3.default)(_React$createElement3, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement3, 'data-qa-file', 'MainPage'), _React$createElement3)),\n                        _react2.default.createElement(\n                            'div',\n                            (_React$createElement4 = {\n                                'data-qa-file': 'MainPage',\n                                __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 517\n                                },\n                                __self: this\n                            }, (0, _defineProperty3.default)(_React$createElement4, '__self', this), (0, _defineProperty3.default)(_React$createElement4, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement4, 'data-qa-file', 'MainPage'), _React$createElement4),\n                            (0, _formatPriceToString2.default)(asset.purchasePrice)\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        (_React$createElement8 = { className: _MainPage2.default.sellingPrice, 'data-qa-file': 'MainPage',\n                            __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 519\n                            },\n                            __self: this\n                        }, (0, _defineProperty3.default)(_React$createElement8, '__self', this), (0, _defineProperty3.default)(_React$createElement8, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement8, 'data-qa-file', 'MainPage'), _React$createElement8),\n                        _react2.default.createElement('img', (_React$createElement6 = { src: '/src/apps/client/ui/pages/MainPage/images/down.svg', 'data-qa-file': 'MainPage',\n                            __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 520\n                            },\n                            __self: this\n                        }, (0, _defineProperty3.default)(_React$createElement6, '__self', this), (0, _defineProperty3.default)(_React$createElement6, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement6, 'data-qa-file', 'MainPage'), _React$createElement6)),\n                        _react2.default.createElement(\n                            'div',\n                            (_React$createElement7 = {\n                                'data-qa-file': 'MainPage',\n                                __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 521\n                                },\n                                __self: this\n                            }, (0, _defineProperty3.default)(_React$createElement7, '__self', this), (0, _defineProperty3.default)(_React$createElement7, 'data-qa-file', 'MainPage'), (0, _defineProperty3.default)(_React$createElement7, 'data-qa-file', 'MainPage'), _React$createElement7),\n                            (0, _formatPriceToString2.default)(asset.sellingPrice)\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return MainPage;\n}(_react.Component), _class.propTypes = {\n    getHistoryPrice: _propTypes2.default.func.isRequired,\n    chartTimeframe: _propTypes2.default.object.isRequired,\n    chartType: _propTypes2.default.object.isRequired,\n    chartSymbolGroup: _propTypes2.default.object.isRequired,\n    chartSymbol: _propTypes2.default.object.isRequired\n}, _temp2);\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MainPage);",{"version":3,"sources":["src\\apps\\client\\ui\\pages\\MainPage\\MainPage.jsx"],"names":["PRICE_UP_COLOR","PRICE_DOWN_COLOR","window","require","createChart","chartOptions","layout","backgroundColor","border","textColor","grid","vertLines","color","horzLines","rightPriceScale","borderVisible","crosshair","horzLine","visible","timeScale","timeVisible","watermark","fontFamily","fontSize","letterSpacing","mapStateToProps","application","charts","chartTimeframe","chartType","chartSymbolGroup","chartSymbol","mediaWidth","media","width","mediaHeight","height","mapDispatchToProps","dispatch","getHistoryPrice","payload","MainPage","state","asset","prevFloatingPrice","times","prices","openPrices","lowPrices","highPrices","chartsContainer","React","createRef","status","isLoading","getSeriesByType","type","chart","addCandlestickSeries","upColor","downColor","priceFormat","precision","minMove","addBarSeries","thinBars","addLineSeries","addAreaSeries","lineColor","topColor","bottomColor","crosshairMarkerVisible","getCandlesData","low","high","open","close","newCandle","haOpen","haClose","haHigh","haLow","findRightDimensions","innerWidth","innerHeight","setChart","current","assetPriceWebsocketController","events","on","handlePriceChange","addEventListener","resize","subscribeVisibleLogicalRangeChange","onVisibleLogicalRangeChanged","handleUnsubscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","props","newVisibleLogicalRange","barsInfo","series","barsInLogicalRange","barsBefore","setNewDataChart","id","name","value","from","to","symbolGroup","symbol","timeframe","resolution","then","removeSeries","historyData","s","t","slice","c","o","l","h","setData","map","time","i","filter","data","setVisibleRange","setNewTypeOrTimeChart","applyOptions","text","setState","priceScale","autoScale","length","markers","position","size","shape","setMarkers","lastIndex","priceLineColor","CHART_SYMBOL_INFO_MAP","title","handleAssetSet","price","assetName","purchasePrice","sellingPrice","chartDate","push","update","newPriceColor","nextProps","nextContext","styles","root","rootChart","assetContainer","assetTitle","Component","propTypes","PropTypes","func","isRequired","object"],"mappings":"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","file":"MainPage.jsx","sourceRoot":"C:\\Users\\cherv\\OneDrive\\Рабочий стол\\deltaway.20","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport getHistoryPrice from '../../../services/client/getHistoryPrice';\nimport assetPriceWebsocketController from '../../../services/client/assetPriceWebsocket';\n\nimport getPeriodByTimeframe from './utils/getPeriodByTimeframe';\nimport getChartDateByTimeframe from './utils/getChartDateByTimeframe';\nimport formatPriceToString from '../../../utils/formatPriceToString';\n\nimport last from '@tinkoff/utils/array/last';\nimport min from 'lodash.min';\nimport max from 'lodash.max';\nimport isUndefined from '@tinkoff/utils/is/undefined';\nimport isEmpty from '@tinkoff/utils/is/empty';\n\nimport { CHART_SYMBOL_INFO_MAP } from '../../../../../../server/constants/symbols';\n\nimport styles from './MainPage.css';\n\nimport calculateBuyingPrice from '../../../utils/calculateBuyPrice';\n\nconst PRICE_UP_COLOR = '#0ea97b';\nconst PRICE_DOWN_COLOR = 'rgba(235, 87, 87, 0.75)';\n\nif (typeof window !== 'undefined') {\n    var { createChart } = require('lightweight-charts/dist/lightweight-charts.esm.production.js');\n}\n\nconst chartOptions = {\n    layout: {\n        backgroundColor: 'rgb(20,26,43)',\n        border: 'solid',\n        textColor: '#d1d4dc'\n    },\n    grid: {\n        vertLines: {\n            color: 'rgba(42, 46, 57, 0.5)'\n        },\n        horzLines: {\n            color: 'rgba(42, 46, 57, 0.5)'\n        }\n    },\n    rightPriceScale: {\n        borderVisible: true\n    },\n    crosshair: {\n        horzLine: {\n            visible: true\n        }\n    },\n    timeScale: {\n        borderVisible: true,\n        timeVisible: true\n    },\n    watermark: {\n        color: 'rgba(231,232,238,0.05)',\n        visible: true,\n        fontFamily: 'FuturaPT-Medium',\n        fontSize: 128,\n        letterSpacing: '0.012em'\n    }\n};\n\nconst mapStateToProps = ({ application, charts }) => {\n    return {\n        chartTimeframe: charts.chartTimeframe,\n        chartType: charts.chartType,\n        chartSymbolGroup: charts.chartSymbolGroup,\n        chartSymbol: charts.chartSymbol,\n        mediaWidth: application.media.width,\n        mediaHeight: application.media.height\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    getHistoryPrice: payload => dispatch(getHistoryPrice(payload))\n});\n\nclass MainPage extends Component {\n    static propTypes = {\n        getHistoryPrice: PropTypes.func.isRequired,\n        chartTimeframe: PropTypes.object.isRequired,\n        chartType: PropTypes.object.isRequired,\n        chartSymbolGroup: PropTypes.object.isRequired,\n        chartSymbol: PropTypes.object.isRequired\n    };\n\n    state = {\n        width: 0,\n        height: 0,\n        asset: {}\n    };\n\n    prevFloatingPrice = null;\n    times = [];\n    prices = [];\n    openPrices = [];\n    lowPrices = [];\n    highPrices = [];\n    chartsContainer = React.createRef();\n\n    status = true;\n    isLoading = false;\n\n    componentDidMount () {\n        // console.log('componentDidMount');\n        this.setChart();\n        this.setNewTypeOrTimeChart(this.props.chartSymbolGroup.id, this.props.chartSymbol.name, this.props.chartTimeframe.value, this.props.chartType.value);\n\n        assetPriceWebsocketController.events.on('status', (status) => {\n            if (status && !this.status) {\n                this.setNewTypeOrTimeChart(\n                    this.props.chartSymbolGroup.id,\n                    this.props.chartSymbol.name,\n                    this.props.chartTimeframe.value,\n                    this.props.chartType.value\n                );\n            }\n\n            this.status = status;\n        });\n    }\n\n    componentWillReceiveProps (nextProps, nextContext) {\n        // console.log('componentWillReceiveProps');\n        if (this.props.chartSymbol !== nextProps.chartSymbol ||\n            this.props.chartTimeframe !== nextProps.chartTimeframe ||\n            this.props.chartType !== nextProps.chartType\n        ) {\n            this.setNewTypeOrTimeChart(nextProps.chartSymbolGroup.id, nextProps.chartSymbol.name, nextProps.chartTimeframe.value, nextProps.chartType.value);\n        }\n    }\n\n    getSeriesByType = type => {\n        switch (type) {\n        case 'candlesticks':\n            return this.chart.addCandlestickSeries({\n                upColor: PRICE_UP_COLOR,\n                downColor: PRICE_DOWN_COLOR,\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        case 'heikinashi':\n            return this.chart.addCandlestickSeries({\n                upColor: PRICE_UP_COLOR,\n                downColor: PRICE_DOWN_COLOR,\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        case 'hlc':\n            return this.chart.addBarSeries({\n                thinBars: false,\n                upColor: PRICE_UP_COLOR,\n                downColor: PRICE_DOWN_COLOR,\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        case 'line':\n            return this.chart.addLineSeries({\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        case 'area':\n            return this.chart.addAreaSeries({\n                lineColor: '#1567a4',\n                topColor: 'rgba(30,118,187,0.6)',\n                bottomColor: 'rgba(34, 150, 243, 0)',\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        case 'dots':\n            return this.chart.addLineSeries({\n                color: 'transparent',\n                crosshairMarkerVisible: false,\n                priceFormat: {\n                    precision: 4,\n                    minMove: 0.0001\n                }\n            });\n        }\n    };\n\n    getCandlesData = (type, { low, high, open, close, newCandle = true }) => {\n        if (type !== 'heikinashi' || !this.haOpen || !this.haClose) {\n            return { low, high, open, close };\n        }\n\n        const haClose = (low + high + open + close) / 4;\n        const haOpen = (this.haOpen + this.haClose) / 2;\n        const haHigh = max([high, haOpen, haClose]);\n        const haLow = min([low, haOpen, haClose]);\n\n        if (newCandle) {\n            this.haOpen = haOpen;\n            this.haClose = haClose;\n        }\n\n        return {\n            low: haLow,\n            high: haHigh,\n            open: haOpen,\n            close: haClose\n        };\n    };\n\n    findRightDimensions = () => {\n        let width = window.innerWidth - 84;\n        let height = window.innerHeight - 150;\n\n        if (window.innerWidth <= 1024 && window.innerWidth <= window.innerHeight) {\n            width = window.innerWidth;\n            height = window.innerHeight - 187;\n        }\n        if (window.innerWidth <= 1024 && window.innerWidth > window.innerHeight) {\n            width = window.innerWidth;\n            height = window.innerHeight - 135;\n        }\n        if (window.innerWidth <= 544) {\n            width = window.innerWidth;\n            height = window.innerHeight - 135;\n        }\n        return { width, height };\n    }\n\n    setChart = () => {\n        this.chart = createChart(this.chartsContainer.current, {\n            ...chartOptions,\n            width: this.findRightDimensions().width,\n            height: this.findRightDimensions().height\n        });\n\n        assetPriceWebsocketController.events.on('data', this.handlePriceChange);\n\n        window.addEventListener('resize', () => {\n            this.chart.resize(this.findRightDimensions().width, this.findRightDimensions().height);\n        });\n\n        this.chart.timeScale().subscribeVisibleLogicalRangeChange(this.onVisibleLogicalRangeChanged);\n    };\n\n    handleUnsubscribeVisibleLogicalRangeChange = () => {\n        this.chart.timeScale().unsubscribeVisibleLogicalRangeChange(this.onVisibleLogicalRangeChanged);\n    }\n\n    onVisibleLogicalRangeChanged = newVisibleLogicalRange => {\n        // console.log('onVisibleLogicalRangeChanged');\n        const { chartSymbolGroup, chartSymbol, chartTimeframe, chartType } = this.props;\n\n        if (!newVisibleLogicalRange) {\n            return;\n        }\n\n        const barsInfo = this.series.barsInLogicalRange(newVisibleLogicalRange);\n\n        if (barsInfo !== null && barsInfo.barsBefore < 0 && !this.isLoading) {\n            this.setNewDataChart(chartSymbolGroup.id, chartSymbol.name, chartTimeframe.value, chartType.value, barsInfo.from, barsInfo.to);\n        }\n    }\n\n    setNewDataChart = (symbolGroup, symbol, timeframe, type, from, to) => {\n        // console.log('setNewDataChart');\n        this.isLoading = true;\n        this.handleUnsubscribeVisibleLogicalRangeChange();\n\n        this.props.getHistoryPrice({\n            ...getPeriodByTimeframe(timeframe, symbolGroup, from),\n            resolution: timeframe,\n            symbolGroup: symbolGroup,\n            symbol\n        })\n            .then(historyData => {\n                if (this.series) {\n                    this.chart.removeSeries(this.series);\n                    this.series = null;\n                }\n\n                const series = this.getSeriesByType(type);\n\n                this.series = series;\n\n                if (historyData.s === 'ok') {\n                    this.times = [...historyData.t.slice(0, -2), ...this.times];\n                    this.prices = [...historyData.c.slice(0, -2), ...this.prices];\n                    this.openPrices = [...historyData.o.slice(0, -2), ...this.openPrices];\n                    this.lowPrices = [...historyData.l.slice(0, -2), ...this.lowPrices];\n                    this.highPrices = [...historyData.h.slice(0, -2), ...this.highPrices];\n\n                    series.setData(this.times.map((time, i) => {\n                        if (i === 0) {\n                            return null;\n                        }\n\n                        return {\n                            time,\n                            value: this.prices[i],\n                            ...this.getCandlesData(type, {\n                                open: this.openPrices[i],\n                                low: this.lowPrices[i],\n                                high: this.highPrices[i],\n                                close: this.prices[i]\n                            })\n                        };\n                    }).filter(data => !!data));\n\n                    this.chart.timeScale().setVisibleRange({ from, to });\n                    this.chart.timeScale().subscribeVisibleLogicalRangeChange(this.onVisibleLogicalRangeChanged);\n                    this.isLoading = false;\n                }\n            });\n    };\n\n    setNewTypeOrTimeChart = (symbolGroup, symbol, timeframe, type) => {\n        if (this.series) {\n            this.chart.removeSeries(this.series);\n            this.series = null;\n\n            this.chart.applyOptions({\n                watermark: {\n                    text: ''\n                }\n            });\n\n            this.setState({ asset: {} });\n            this.chart.priceScale().applyOptions({ autoScale: true });\n        }\n        this.props.getHistoryPrice({\n            ...getPeriodByTimeframe(timeframe, symbolGroup),\n            resolution: timeframe,\n            symbolGroup: symbolGroup,\n            symbol\n        })\n            .then(historyData => {\n                const series = this.getSeriesByType(type);\n\n                this.series = series;\n\n                if (historyData.s === 'ok') {\n                    if (!isUndefined(assetPriceWebsocketController.prices[symbol])) {\n                        historyData.c[historyData.c.length - 1] = assetPriceWebsocketController.prices[symbol];\n                    }\n\n                    this.times = historyData.t;\n                    this.prices = historyData.c;\n                    this.openPrices = historyData.o;\n                    this.lowPrices = historyData.l;\n                    this.highPrices = historyData.h;\n                    this.prevFloatingPrice = last(this.prices);\n\n                    this.haOpen = historyData.o[0];\n                    this.haClose = historyData.c[0];\n\n                    const data = historyData.t.map((time, i) => {\n                        if (i === 0) {\n                            return null;\n                        }\n\n                        return {\n                            time,\n                            value: historyData.c[i],\n                            ...this.getCandlesData(type, {\n                                open: historyData.o[i],\n                                low: historyData.l[i],\n                                high: historyData.h[i],\n                                close: historyData.c[i]\n                            })\n                        };\n                    }).filter(data => !!data);\n\n                    series.setData(data);\n\n                    if (type === 'dots') {\n                        this.markers = historyData.t.map((time, i) => {\n                            if (i === 0) {\n                                return null;\n                            }\n\n                            return {\n                                time,\n                                position: 'inBar',\n                                size: 1,\n                                shape: 'circle',\n                                value: historyData.c[i],\n                                color: historyData.c[i] > historyData.c[i - 1] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                            };\n                        }).filter(data => !!data);\n                        series.setMarkers(this.markers);\n\n                        const lastIndex = historyData.c.length - 1;\n\n                        series.applyOptions({\n                            priceLineColor: historyData.c[lastIndex] > historyData.c[lastIndex - 1] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                        });\n                    }\n\n                    this.chart.applyOptions({\n                        watermark: {\n                            text: `${CHART_SYMBOL_INFO_MAP[symbol].title}`\n                        }\n                    });\n\n                    this.handleAssetSet(this.props.chartSymbol);\n                }\n            });\n    };\n\n    handleAssetSet = chartSymbol => {\n        const price = assetPriceWebsocketController.prices[chartSymbol.name];\n        this.setState({\n            asset: {\n                assetName: chartSymbol.name,\n                purchasePrice: calculateBuyingPrice(chartSymbol.name, price),\n                sellingPrice: price\n            }\n        });\n    }\n\n    handlePriceChange = data => {\n        if (!this.series) {\n            return;\n        }\n        const { chartTimeframe, chartType, chartSymbol } = this.props;\n\n        if (data.name !== chartSymbol.name) {\n            return;\n        }\n\n        this.handleAssetSet(data);\n\n        const chartDate = getChartDateByTimeframe(data.time, chartTimeframe.value);\n        let newCandle = false;\n\n        if (last(this.times) !== chartDate) {\n            this.prices[this.prices.length - 1] = this.prevFloatingPrice;\n            this.times.push(chartDate);\n            this.openPrices.push(data.price);\n            this.prices.push(data.price);\n            this.lowPrices.push(data.price);\n            this.highPrices.push(data.price);\n\n            newCandle = true;\n\n            if (chartType.value === 'dots') {\n                this.markers.push({\n                    time: chartDate,\n                    position: 'inBar',\n                    size: 1,\n                    shape: 'circle',\n                    value: data.price,\n                    color: data.price > last(this.prices) ? PRICE_UP_COLOR : PRICE_DOWN_COLOR\n                });\n                this.series.setMarkers(this.markers);\n            }\n        }\n\n        this.prevFloatingPrice = data.price;\n        this.prices[this.prices.length - 1] = data.price;\n\n        if (data.price < last(this.lowPrices)) {\n            this.lowPrices[this.lowPrices.length - 1] = data.price;\n        }\n        if (data.price > last(this.highPrices)) {\n            this.highPrices[this.highPrices.length - 1] = data.price;\n        }\n\n        this.series.update({\n            time: chartDate,\n            value: data.price,\n            ...this.getCandlesData(chartType.value, {\n                open: last(this.openPrices),\n                low: last(this.lowPrices),\n                high: last(this.highPrices),\n                close: data.price,\n                newCandle\n            })\n        });\n\n        if (chartType.value === 'dots') {\n            const newPriceColor = data.price > this.prices[this.prices.length - 2] ? PRICE_UP_COLOR : PRICE_DOWN_COLOR;\n            this.series.applyOptions({\n                priceLineColor: newPriceColor\n            });\n\n            if (newPriceColor !== last(this.markers).color) {\n                this.markers[this.markers.length - 1].color = newPriceColor;\n                this.series.setMarkers(this.markers);\n            }\n        }\n    };\n\n    render () {\n        const { asset } = this.state;\n\n        return <section className={styles.root}>\n            <section className={styles.rootChart} ref={this.chartsContainer} />\n            {\n                !isEmpty(asset) &&\n                <div className={styles.assetContainer}>\n                    <div className={styles.assetTitle}>\n                        {\n                            CHART_SYMBOL_INFO_MAP[asset.assetName].title\n                        }\n                    </div>\n                    <div className={styles.purchasePrice}>\n                        <img src=\"/src/apps/client/ui/pages/MainPage/images/up.svg\" />\n                        <div>{formatPriceToString(asset.purchasePrice)}</div>\n                    </div>\n                    <div className={styles.sellingPrice}>\n                        <img src=\"/src/apps/client/ui/pages/MainPage/images/down.svg\" />\n                        <div>{formatPriceToString(asset.sellingPrice)}</div>\n                    </div>\n                </div>\n            }\n        </section>;\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n"]}]}