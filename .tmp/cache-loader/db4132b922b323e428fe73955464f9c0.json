{"remainingRequest":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js??ref--13-2!/Users/dimasabitov/Downloads/deltaway.20/src/apps/client/utils/getAssetValues.js","dependencies":[{"path":"/Users/dimasabitov/Downloads/deltaway.20/src/apps/client/utils/getAssetValues.js","mtime":1671546512102},{"path":"/Users/dimasabitov/Downloads/deltaway.20/.babelrc","mtime":1671546158632},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/cache-loader/dist/cjs.js","mtime":1671546959174},{"path":"/Users/dimasabitov/Downloads/deltaway.20/node_modules/babel-loader/lib/index.js","mtime":1671546957682}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar getOpeningSlotPrice = exports.getOpeningSlotPrice = function getOpeningSlotPrice(asset, openingPrice) {\n    return openingPrice * asset.lotVolume / asset.leverage;\n};\nvar getPledge = exports.getPledge = function getPledge(amount, openingSlotPrice) {\n    return amount * openingSlotPrice;\n};\nvar getProfit = exports.getProfit = function getProfit(amount, openingPrice, price, type, asset) {\n    return (type === 'buy' ? price - openingPrice : openingPrice - price) * amount * asset.lotVolume;\n};\nvar getBalance = exports.getBalance = function getBalance(balance, profit, commissionValue) {\n    return balance + profit - commissionValue;\n};\nvar getFreeBalance = exports.getFreeBalance = function getFreeBalance(balance, pledge) {\n    return balance - pledge;\n};\nvar getCommission = exports.getCommission = function getCommission(pledge, commission) {\n    return pledge * commission;\n};\n\nexports.default = function (asset, _ref, price, balance, commission) {\n    var openingPrice = _ref.openingPrice,\n        amount = _ref.amount,\n        type = _ref.type;\n\n    var openingSlotPrice = getOpeningSlotPrice(asset, openingPrice);\n    var pledge = getPledge(amount, openingSlotPrice);\n    var profit = getProfit(amount, openingPrice, price, type, asset);\n    var commissionValue = getCommission(pledge, commission);\n    var newBalance = getBalance(balance, profit, commissionValue);\n    var freeBalance = getFreeBalance(balance, pledge);\n\n    return {\n        openingSlotPrice: openingSlotPrice,\n        commissionValue: commissionValue,\n        balance: newBalance,\n        freeBalance: freeBalance,\n        pledge: pledge,\n        profit: profit\n    };\n};",{"version":3,"sources":["src/apps/client/utils/getAssetValues.js"],"names":["getOpeningSlotPrice","asset","openingPrice","lotVolume","leverage","getPledge","amount","openingSlotPrice","getProfit","price","type","getBalance","balance","profit","commissionValue","getFreeBalance","pledge","getCommission","commission","newBalance","freeBalance"],"mappings":";;;;;AAAO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,KAAD,EAAQC,YAAR;AAAA,WAA0BA,eAAeD,MAAME,SAAtB,GAAmCF,MAAMG,QAAlE;AAAA,CAA5B;AACA,IAAMC,gCAAY,SAAZA,SAAY,CAACC,MAAD,EAASC,gBAAT;AAAA,WAA8BD,SAASC,gBAAvC;AAAA,CAAlB;AACA,IAAMC,gCAAY,SAAZA,SAAY,CAACF,MAAD,EAASJ,YAAT,EAAuBO,KAAvB,EAA8BC,IAA9B,EAAoCT,KAApC;AAAA,WACrB,CAACS,SAAS,KAAT,GAAkBD,QAAQP,YAA1B,GAA2CA,eAAeO,KAA3D,IAAqEH,MAArE,GAA8EL,MAAME,SAD/D;AAAA,CAAlB;AAEA,IAAMQ,kCAAa,SAAbA,UAAa,CAACC,OAAD,EAAUC,MAAV,EAAkBC,eAAlB;AAAA,WAAsCF,UAAUC,MAAV,GAAmBC,eAAzD;AAAA,CAAnB;AACA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACH,OAAD,EAAUI,MAAV;AAAA,WAAqBJ,UAAUI,MAA/B;AAAA,CAAvB;AACA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACD,MAAD,EAASE,UAAT;AAAA,WAAwBF,SAASE,UAAjC;AAAA,CAAtB;;kBAEQ,UAACjB,KAAD,QAAwCQ,KAAxC,EAA+CG,OAA/C,EAAwDM,UAAxD,EAAuE;AAAA,QAA7DhB,YAA6D,QAA7DA,YAA6D;AAAA,QAA/CI,MAA+C,QAA/CA,MAA+C;AAAA,QAAvCI,IAAuC,QAAvCA,IAAuC;;AAClF,QAAMH,mBAAmBP,oBAAoBC,KAApB,EAA2BC,YAA3B,CAAzB;AACA,QAAMc,SAASX,UAAUC,MAAV,EAAkBC,gBAAlB,CAAf;AACA,QAAMM,SAASL,UAAUF,MAAV,EAAkBJ,YAAlB,EAAgCO,KAAhC,EAAuCC,IAAvC,EAA6CT,KAA7C,CAAf;AACA,QAAMa,kBAAkBG,cAAcD,MAAd,EAAsBE,UAAtB,CAAxB;AACA,QAAMC,aAAaR,WAAWC,OAAX,EAAoBC,MAApB,EAA4BC,eAA5B,CAAnB;AACA,QAAMM,cAAcL,eAAeH,OAAf,EAAwBI,MAAxB,CAApB;;AAEA,WAAO;AACHT,0CADG;AAEHO,wCAFG;AAGHF,iBAASO,UAHN;AAIHC,gCAJG;AAKHJ,sBALG;AAMHH;AANG,KAAP;AAQH,C","file":"getAssetValues.js","sourceRoot":"/Users/dimasabitov/Downloads/deltaway.20","sourcesContent":["export const getOpeningSlotPrice = (asset, openingPrice) => (openingPrice * asset.lotVolume) / asset.leverage;\nexport const getPledge = (amount, openingSlotPrice) => amount * openingSlotPrice;\nexport const getProfit = (amount, openingPrice, price, type, asset) =>\n    (type === 'buy' ? (price - openingPrice) : (openingPrice - price)) * amount * asset.lotVolume;\nexport const getBalance = (balance, profit, commissionValue) => balance + profit - commissionValue;\nexport const getFreeBalance = (balance, pledge) => balance - pledge;\nexport const getCommission = (pledge, commission) => pledge * commission;\n\nexport default (asset, { openingPrice, amount, type }, price, balance, commission) => {\n    const openingSlotPrice = getOpeningSlotPrice(asset, openingPrice);\n    const pledge = getPledge(amount, openingSlotPrice);\n    const profit = getProfit(amount, openingPrice, price, type, asset);\n    const commissionValue = getCommission(pledge, commission);\n    const newBalance = getBalance(balance, profit, commissionValue);\n    const freeBalance = getFreeBalance(balance, pledge);\n\n    return {\n        openingSlotPrice,\n        commissionValue,\n        balance: newBalance,\n        freeBalance,\n        pledge,\n        profit\n    };\n};\n"]}]}